[{"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\App.js":"1","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Plan\\Plan.js":"2","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Layout.js":"3","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Invest.container.js":"4","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\TradeLogger.js":"5","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\trade.reducer.js":"6","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\trade.middleware.js":"7","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\store.js":"8","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\TradeLogger.container.js":"9","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\index.js":"10","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Plan.container.js":"11","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\auth.reducer.js":"12","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\HomeSite\\HomeSite.js":"13","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\trade.actions.js":"14","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\FormTrade\\FormTrade.js":"15","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\AddTrade\\AddTrade.js":"16","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\UpdateTrade\\UpdateTrade.js":"17","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\UpdateTrade.container.js":"18","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\index.js":"19","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\auth.middleware.js":"20","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Market\\Market.js":"21","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Utils\\trade.utils.js":"22","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\refreshToken.middleware.js":"23","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\HomeSite.container.js":"24","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\HomeDashboard\\HomeDashboard.js":"25","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\Signup\\Signup.js":"26","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\index.js":"27","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\Login.container.js":"28","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Invest\\Invest.js":"29","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\AddTrade.container.js":"30","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainerWithPer.js":"31","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainer.js":"32"},{"size":1937,"mtime":1610730513202,"results":"33","hashOfConfig":"34"},{"size":194,"mtime":1610730089353,"results":"35","hashOfConfig":"34"},{"size":3960,"mtime":1610730412317,"results":"36","hashOfConfig":"34"},{"size":270,"mtime":1610729973510,"results":"37","hashOfConfig":"34"},{"size":15507,"mtime":1611055575788,"results":"38","hashOfConfig":"34"},{"size":3212,"mtime":1611052168071,"results":"39","hashOfConfig":"34"},{"size":3179,"mtime":1610840850486,"results":"40","hashOfConfig":"34"},{"size":1230,"mtime":1610755877150,"results":"41","hashOfConfig":"34"},{"size":568,"mtime":1610828257425,"results":"42","hashOfConfig":"34"},{"size":669,"mtime":1610591537162,"results":"43","hashOfConfig":"34"},{"size":262,"mtime":1610730058707,"results":"44","hashOfConfig":"34"},{"size":3519,"mtime":1610652074103,"results":"45","hashOfConfig":"34"},{"size":381,"mtime":1610298093219,"results":"46","hashOfConfig":"34"},{"size":1754,"mtime":1610840904881,"results":"47","hashOfConfig":"34"},{"size":10681,"mtime":1611052227605,"results":"48","hashOfConfig":"34"},{"size":2382,"mtime":1611013179007,"results":"49","hashOfConfig":"34"},{"size":2968,"mtime":1611012164459,"results":"50","hashOfConfig":"34"},{"size":752,"mtime":1610773747306,"results":"51","hashOfConfig":"34"},{"size":1423,"mtime":1610775209090,"results":"52","hashOfConfig":"34"},{"size":3042,"mtime":1610689541094,"results":"53","hashOfConfig":"34"},{"size":200,"mtime":1610729852704,"results":"54","hashOfConfig":"34"},{"size":3057,"mtime":1611051059916,"results":"55","hashOfConfig":"34"},{"size":1317,"mtime":1610689702927,"results":"56","hashOfConfig":"34"},{"size":273,"mtime":1610554501129,"results":"57","hashOfConfig":"34"},{"size":217,"mtime":1610592747551,"results":"58","hashOfConfig":"34"},{"size":6598,"mtime":1610652501148,"results":"59","hashOfConfig":"34"},{"size":323,"mtime":1610755749104,"results":"60","hashOfConfig":"34"},{"size":647,"mtime":1610638094846,"results":"61","hashOfConfig":"34"},{"size":200,"mtime":1610729990565,"results":"62","hashOfConfig":"34"},{"size":567,"mtime":1610773170644,"results":"63","hashOfConfig":"34"},{"size":3678,"mtime":1611045261269,"results":"64","hashOfConfig":"34"},{"size":687,"mtime":1611050376138,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1cywuev",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\App.js",[],["135","136"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Plan\\Plan.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Layout.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Invest.container.js",[],["137","138"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\TradeLogger.js",["139","140","141"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\trade.reducer.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\trade.middleware.js",["142"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\store.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\TradeLogger.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\index.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Plan.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\auth.reducer.js",[],["143","144"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\HomeSite\\HomeSite.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\trade.actions.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\FormTrade\\FormTrade.js",["145","146"],"import React from \"react\";\r\nimport { Form, Input, Select, TextArea, Checkbox } from \"semantic-ui-react\";\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport fr from \"date-fns/locale/fr\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nregisterLocale(\"fr\", fr);\r\n\r\nconst typeSelect = [\r\n    { key: \"long\", value: \"Long\", text: \"Long\" },\r\n    { key: \"short\", value: \"Short\", text: \"Short\" },\r\n];\r\nconst platformSelect = [\r\n    { key: \"binance\", value: \"Binance\", text: \"Binance\" },\r\n    { key: \"ftx\", value: \"FTX\", text: \"FTX\" },\r\n    { key: \"bittrex\", value: \"Bittrex\", text: \"Bittrex\" },\r\n    { key: \"kraken\", value: \"Kraken\", text: \"Kraken\" },\r\n    { key: \"coinbase\", value: \"Coinbase\", text: \"Coinbase\" },\r\n];\r\n\r\nconst setupList = [\r\n    {\r\n        key: \"Ichimoku\",\r\n        text: \"Ichimoku\",\r\n        value: \"Ichimoku\",\r\n    },\r\n    {\r\n        key: \"W\",\r\n        text: \"W\",\r\n        value: \"W\",\r\n    },\r\n];\r\n\r\nconst formatList = [\r\n    {\r\n        key: \"USDT\",\r\n        text: \"USDT\",\r\n        value: \"USDT\",\r\n    },\r\n    {\r\n        key: \"BTC\",\r\n        text: \"BTC\",\r\n        value: \"BTC\",\r\n    },\r\n];\r\n\r\nconst FormModal = ({ tradeData, setTradeData, handleSubmit }) => {\r\n    const handleChange = (e, data) => {\r\n        const { name, value } = data ? data : e.target;\r\n        const dataForm = {\r\n            ...tradeData,\r\n            [name]: value,\r\n        };\r\n        setTradeData(dataForm);\r\n    };\r\n\r\n    return (\r\n        <div className=\"modalform\">\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label>Format</label>\r\n                        <Select\r\n                            name=\"format\"\r\n                            placeholder=\"USDT\"\r\n                            options={formatList}\r\n                            value={tradeData.format}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                    {tradeData.format === \"BTC\" && (\r\n                        <Form.Field>\r\n                            <label>Price BTC vs USD</label>\r\n                            <Input\r\n                                name=\"priceBtcVsUsd\"\r\n                                type=\"text\"\r\n                                onChange={handleChange}\r\n                                placeholder=\"35200\"\r\n                                label=\"$\"\r\n                                labelPosition={\"right corner\"}\r\n                                pos\r\n                                value={tradeData.priceBtcVsUsd}\r\n                            />\r\n                        </Form.Field>\r\n                    )}\r\n                    <Form.Field>\r\n                        <label>Screenshot URL</label>\r\n                        <Input\r\n                            name=\"screenshotUrl\"\r\n                            type=\"text\"\r\n                            onChange={handleChange}\r\n                            placeholder=\"https://www.tradingview.com/x/gFRYCH3B/\"\r\n                            value={tradeData.screenshotUrl}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label>Platform</label>\r\n                        <Select\r\n                            placeholder=\"Choose..\"\r\n                            name=\"platform\"\r\n                            options={platformSelect}\r\n                            onChange={handleChange}\r\n                            value={tradeData.platform}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Type</label>\r\n                        <Select\r\n                            placeholder=\"Choose..\"\r\n                            name=\"type\"\r\n                            options={typeSelect}\r\n                            onChange={handleChange}\r\n                            value={tradeData.type}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label>Assets</label>\r\n                        <Input name=\"assets\" placeholder=\"BTC/USDT\" value={tradeData.assets} onChange={handleChange} />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Capital</label>\r\n                        <Input\r\n                            name=\"capital\"\r\n                            placeholder=\"1000\"\r\n                            type=\"text\"\r\n                            pattern=\"^\\d*(\\.\\d{0,2})?$\"\r\n                            value={tradeData.capital}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label>Entry Price</label>\r\n                        <Input\r\n                            name=\"entryPrice\"\r\n                            placeholder=\"34589\"\r\n                            value={tradeData.entryPrice}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Stop Loss</label>\r\n                        <Input name=\"stopLoss\" placeholder=\"33187\" value={tradeData.stopLoss} onChange={handleChange} />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label>Take Profit</label>\r\n                        <Input\r\n                            name=\"takeProfit\"\r\n                            placeholder=\"36897\"\r\n                            value={tradeData.takeProfit}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Leaving Price</label>\r\n                        <Input\r\n                            name=\"exitPrice\"\r\n                            placeholder=\"36897\"\r\n                            value={tradeData.exitPrice}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label>Risk Ratio</label>\r\n                        <Input name=\"riskRatio\" placeholder=\"2\" value={tradeData.riskRatio} onChange={handleChange} />\r\n                    </Form.Field>\r\n\r\n                    <Form.Field>\r\n                        <label>Setup</label>\r\n                        <Select\r\n                            name=\"setup\"\r\n                            placeholder=\"Ichimoku\"\r\n                            options={setupList}\r\n                            value={tradeData.setup}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label>{`Levier: x${tradeData.leverage} `}</label>\r\n                        <Input\r\n                            min={1}\r\n                            max={125}\r\n                            name=\"leverage\"\r\n                            step={1}\r\n                            type=\"range\"\r\n                            onChange={handleChange}\r\n                            value={tradeData.leverage}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Fees</label>\r\n                        <Input name=\"fees\" placeholder=\"1\" value={tradeData.fees} onChange={handleChange} />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label>Entry Date</label>\r\n                        <DatePicker\r\n                            name=\"entryDate\"\r\n                            selected={Date.parse(tradeData.entryDate)}\r\n                            onChange={(date) => {\r\n                                console.log(date);\r\n                                setTradeData({\r\n                                    ...tradeData,\r\n                                    entryDate: date,\r\n                                });\r\n                            }}\r\n                            showTimeSelect\r\n                            locale=\"fr\"\r\n                            timeFormat=\"p\"\r\n                            timeIntervals={5}\r\n                            dateFormat=\"Pp\"\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Exit Date</label>\r\n                        <DatePicker\r\n                            name=\"exitDate\"\r\n                            selected={Date.parse(tradeData.exitDate)}\r\n                            onChange={(date) => {\r\n                                setTradeData({\r\n                                    ...tradeData,\r\n                                    exitDate: date,\r\n                                });\r\n                            }}\r\n                            showTimeSelect\r\n                            locale=\"fr\"\r\n                            timeFormat=\"p\"\r\n                            timeIntervals={5}\r\n                            dateFormat=\"Pp\"\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Field>\r\n                    <label>Feeling</label>\r\n                    <Input\r\n                        name=\"feeling\"\r\n                        onChange={handleChange}\r\n                        value={tradeData.feeling}\r\n                        placeholder=\"Feeling about this trade\"\r\n                    />\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                    <label>Notes :</label>\r\n                    <TextArea\r\n                        name=\"note\"\r\n                        value={tradeData.note}\r\n                        onChange={handleChange}\r\n                        className=\"note\"\r\n                        rows={2}\r\n                        rows={10}\r\n                        placeholder=\"Dans quel état d'esprit êtes-vous ? Est-ce que vous êtes confiant à l'idée de prendre ce trade ? Ce trade respect-il votre trading plan?\"\r\n                    />\r\n                </Form.Field>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormModal;\r\n","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\AddTrade\\AddTrade.js",["147","148"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\UpdateTrade\\UpdateTrade.js",["149","150"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\UpdateTrade.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\index.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\auth.middleware.js",["151"],"import axios from \"axios\";\r\nimport {\r\n    loginSubmitError,\r\n    loginSubmitSuccess,\r\n    LOGIN_SUBMIT,\r\n    LOGOUT,\r\n    logoutError,\r\n    logoutSuccess,\r\n    signupSubmitError,\r\n    signupSubmitSuccess,\r\n    SIGNUP_SUBMIT,\r\n} from \"../actions/auth.actions\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nexport const authMiddleware = (store) => (next) => (action) => {\r\n    next(action);\r\n\r\n    switch (action.type) {\r\n        case LOGIN_SUBMIT: {\r\n            const loginData = store.getState().authReducer.loginData;\r\n\r\n            axios({\r\n                method: \"POST\",\r\n                url: `${process.env.REACT_APP_API_URL}/auth/login`,\r\n                withCredentials: true,\r\n                data: loginData,\r\n            })\r\n                .then((res) => {\r\n                    const { data } = res;\r\n\r\n                    console.log(data.message);\r\n\r\n                    if (data.message) {\r\n                        return store.dispatch(loginSubmitError({ message: data.message }));\r\n                    }\r\n\r\n                    if (res.status !== 201) return store.dispatch(loginSubmitError());\r\n\r\n                    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${data.accessToken}`;\r\n\r\n                    store.dispatch(loginSubmitSuccess(data));\r\n                    store.dispatch(push(\"/dashboard\"));\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"err\", err);\r\n                    store.dispatch(loginSubmitError(err));\r\n                });\r\n            break;\r\n        }\r\n        case LOGOUT: {\r\n            axios({\r\n                method: \"GET\",\r\n                url: `${process.env.REACT_APP_API_URL}/auth/logout`,\r\n            })\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    store.dispatch(logoutSuccess(res.data));\r\n                    //store.dispatch(push(\"/login\"));\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    store.dispatch(logoutError());\r\n                });\r\n            break;\r\n        }\r\n        case SIGNUP_SUBMIT: {\r\n            const signupData = store.getState().authReducer.signupData;\r\n\r\n            axios({\r\n                method: \"POST\",\r\n                url: `${process.env.REACT_APP_API_URL}/auth/signup`,\r\n                withCredentials: true,\r\n                data: signupData,\r\n            })\r\n                .then((res) => {\r\n                    const { data } = res;\r\n\r\n                    if (data.errors) {\r\n                        return store.dispatch(signupSubmitError(data.errors));\r\n                    }\r\n\r\n                    if (res.status !== 201) return;\r\n\r\n                    store.dispatch(signupSubmitSuccess(data));\r\n                    store.dispatch(push(\"/dashboard\"));\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    store.dispatch(signupSubmitError());\r\n                });\r\n            break;\r\n        }\r\n    }\r\n};\r\n","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Market\\Market.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Utils\\trade.utils.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\refreshToken.middleware.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\HomeSite.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\HomeDashboard\\HomeDashboard.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\Signup\\Signup.js",["152","153","154"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\index.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\Login.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Invest\\Invest.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\AddTrade.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainerWithPer.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainer.js",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"155","replacedBy":"159"},{"ruleId":"157","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":109,"column":33,"nodeType":"163","endLine":109,"endColumn":42},{"ruleId":"164","severity":1,"message":"165","line":175,"column":15,"nodeType":"166","endLine":178,"endColumn":6},{"ruleId":"164","severity":1,"message":"167","line":178,"column":8,"nodeType":"168","endLine":178,"endColumn":10,"suggestions":"169"},{"ruleId":"170","severity":1,"message":"171","line":18,"column":5,"nodeType":"172","messageId":"173","endLine":95,"endColumn":6},{"ruleId":"155","replacedBy":"174"},{"ruleId":"157","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":2,"column":41,"nodeType":"178","messageId":"179","endLine":2,"endColumn":49},{"ruleId":"161","severity":1,"message":"162","line":266,"column":25,"nodeType":"163","endLine":266,"endColumn":34},{"ruleId":"176","severity":1,"message":"180","line":2,"column":31,"nodeType":"178","messageId":"179","endLine":2,"endColumn":36},{"ruleId":"176","severity":1,"message":"181","line":2,"column":38,"nodeType":"178","messageId":"179","endLine":2,"endColumn":45},{"ruleId":"176","severity":1,"message":"180","line":2,"column":31,"nodeType":"178","messageId":"179","endLine":2,"endColumn":36},{"ruleId":"176","severity":1,"message":"181","line":2,"column":38,"nodeType":"178","messageId":"179","endLine":2,"endColumn":45},{"ruleId":"170","severity":1,"message":"171","line":18,"column":5,"nodeType":"172","messageId":"173","endLine":93,"endColumn":6},{"ruleId":"182","severity":1,"message":"183","line":25,"column":36,"nodeType":"184","messageId":"185","endLine":25,"endColumn":37,"suggestions":"186"},{"ruleId":"182","severity":1,"message":"183","line":25,"column":61,"nodeType":"184","messageId":"185","endLine":25,"endColumn":62,"suggestions":"187"},{"ruleId":"164","severity":1,"message":"188","line":41,"column":8,"nodeType":"168","endLine":41,"endColumn":10,"suggestions":"189"},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],["190"],["191"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'fetchTrades' and 'trades'. Either include them or remove the dependency array.","ArrayExpression",["192"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["190"],["191"],"no-unused-vars","'Checkbox' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'Divider' is defined but never used.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["193","194"],["195","196"],"React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.",["197"],"no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"messageId":"200","fix":"201","desc":"202"},{"messageId":"203","fix":"204","desc":"205"},{"messageId":"200","fix":"206","desc":"202"},{"messageId":"203","fix":"207","desc":"205"},{"desc":"208","fix":"209"},"Update the dependencies array to be: [fetchTrades, trades]",{"range":"210","text":"211"},"removeEscape",{"range":"212","text":"213"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"214","text":"215"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"216","text":"213"},{"range":"217","text":"215"},"Update the dependencies array to be: [register]",{"range":"218","text":"219"},[7111,7113],"[fetchTrades, trades]",[751,752],"",[751,751],"\\",[776,777],[776,776],[1484,1486],"[register]"]