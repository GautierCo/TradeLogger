[{"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\reportWebVitals.js":"1","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\App.js":"2","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\index.js":"3","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\HomeDashboard\\HomeDashboard.js":"4","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\HomeSite\\HomeSite.js":"5","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Layout.js":"6","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\TradeLogger.js":"7","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\AddModal\\AddModal.js":"8","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Login\\Login.js":"9"},{"size":362,"mtime":1609121759416,"results":"10","hashOfConfig":"11"},{"size":1191,"mtime":1610391869629,"results":"12","hashOfConfig":"11"},{"size":488,"mtime":1610291569127,"results":"13","hashOfConfig":"11"},{"size":193,"mtime":1610306518171,"results":"14","hashOfConfig":"11"},{"size":381,"mtime":1610298093219,"results":"15","hashOfConfig":"11"},{"size":3048,"mtime":1610316619247,"results":"16","hashOfConfig":"11"},{"size":9127,"mtime":1610390083110,"results":"17","hashOfConfig":"11"},{"size":4625,"mtime":1610390518087,"results":"18","hashOfConfig":"11"},{"size":1145,"mtime":1610393608946,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cywuev",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\App.js",["43","44"],"import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { Button } from \"semantic-ui-react\";\n\n/* Styles */\nimport \"semantic-ui-less/semantic.less\";\nimport \"./app.scss\";\n\n/* Components */\nimport HomeDashboard from \"./Components/Dashboard/HomeDashboard/HomeDashboard\";\nimport TradeLogger from \"./Components/Dashboard/TradeLogger/TradeLogger\";\nimport HomeSite from \"./Components/Site/HomeSite/HomeSite\";\nimport Login from \"./Components/Site/Login/Login\";\n\nconst App = () => {\n    return (\n        <div className=\"app\">\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <HomeSite />\n                    </Route>\n                    <Route exact path=\"/login\">\n                        <Login />\n                    </Route>\n                    <Route exact path=\"/dashboard\">\n                        <HomeDashboard />\n                    </Route>\n                    <Route exact path=\"/dashboard/tradelogger\">\n                        <TradeLogger />\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    );\n};\n\nexport default App;\n","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\index.js",[],["45","46"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\HomeDashboard\\HomeDashboard.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\HomeSite\\HomeSite.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Layout.js",["47","48","49"],"import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Divider, Header, Icon, Image } from \"semantic-ui-react\";\r\nimport \"./layout.scss\";\r\nimport Logo from \"../../Assets/logo.png\";\r\n\r\nconst Layout = (props) => {\r\n    const { children, title = \"NoTitle\" } = props;\r\n\r\n    return (\r\n        <div className=\"layout\">\r\n            <div className=\"layout-header\">\r\n                <div className=\"layout-title\">\r\n                    <Image src={Logo} size=\"small\"></Image>\r\n                </div>\r\n\r\n                <div className=\"layout-menu\">\r\n                    <NavLink exact to=\"/dashboard\" activeClassName=\"active-link\" className=\"layout-menu--link\">\r\n                        Dashboard\r\n                    </NavLink>\r\n                    <NavLink exact to=\"/dashboard/booklog\" activeClassName=\"active-link\" className=\"layout-menu--link\">\r\n                        Journal de bord\r\n                    </NavLink>\r\n                    <NavLink\r\n                        exact\r\n                        to=\"/dashboard/tradingplan\"\r\n                        activeClassName=\"active-link\"\r\n                        className=\"layout-menu--link\"\r\n                    >\r\n                        Trading plan\r\n                    </NavLink>\r\n                    <NavLink\r\n                        exact\r\n                        to=\"/dashboard/tradelogger\"\r\n                        activeClassName=\"active-link\"\r\n                        className=\"layout-menu--link\"\r\n                    >\r\n                        Trade Logger\r\n                    </NavLink>\r\n                    <NavLink exact to=\"/dashboard/invest\" activeClassName=\"active-link\" className=\"layout-menu--link\">\r\n                        Investissements\r\n                    </NavLink>\r\n                    <NavLink exact to=\"/dashboard/market\" activeClassName=\"active-link\" className=\"layout-menu--link\">\r\n                        March√©\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div className=\"layout-right\">\r\n                    <div className=\"layout-right_container\">\r\n                        <Icon name=\"btc\" color=\"orange\" size=\"large\" className=\"icon-sold\" />\r\n                        <div className=\"layout-right--sold\">115.000000</div>\r\n                    </div>\r\n\r\n                    <div className=\"layout-right_container\">\r\n                        <div className=\"layout-right--avatar\">\r\n                            <Image\r\n                                src=\"https://media-exp1.licdn.com/dms/image/C4D03AQF31WZEADth2g/profile-displayphoto-shrink_200_200/0/1583532662962?e=1616025600&v=beta&t=inXlvv0G0yKcz5hnx5vDM6GzstQTN5nJ5t62C0SMvN8\"\r\n                                avatar\r\n                                size=\"small\"\r\n                            ></Image>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Divider />\r\n\r\n            <div className=\"layout-main\">{children}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\TradeLogger.js",["50","51"],"import React, { useState } from \"react\";\r\nimport { Dropdown, Table, Image, Icon, Label, TextArea, Form, List, Button } from \"semantic-ui-react\";\r\nimport Layout from \"../Layout\";\r\nimport \"./tradelogger.scss\";\r\n\r\nimport ReactSlider from \"react-slider\";\r\n\r\n/* fake data */\r\nimport FakeData from \"../../../FakeData/tradeLogger.json\";\r\nimport AddModal from \"./AddModal/AddModal\";\r\n\r\nconst setupList = [\r\n    {\r\n        key: \"Ichimoku\",\r\n        text: \"Ichimoku\",\r\n        value: \"Ichimoku\",\r\n    },\r\n    {\r\n        key: \"W\",\r\n        text: \"W\",\r\n        value: \"W\",\r\n    },\r\n];\r\n\r\nconst SliderComp = ({ leverage }) => {\r\n    return (\r\n        <ReactSlider\r\n            defaultValue={leverage}\r\n            className=\"horizontal-slider slider\"\r\n            marks={[1, 25, 50, 75, 100, 125]}\r\n            min={1}\r\n            max={125}\r\n            withTracks\r\n            markClassName=\"slider__mark slider__active\"\r\n            thumbClassName=\"slider__thumb\"\r\n            trackClassName=\"slider__track\"\r\n            renderThumb={(props, state) => {\r\n                return (\r\n                    <div className=\"slider__thumb\" {...props}>\r\n                        {state.valueNow}x\r\n                    </div>\r\n                );\r\n            }}\r\n            renderTrack={(props, state) => {\r\n                return (\r\n                    <div className=\"slider__track\" {...props}>\r\n                        {props.value}\r\n                    </div>\r\n                );\r\n            }}\r\n            renderMark={(props) => {\r\n                return <div {...props}>{props.key}</div>;\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nconst AllDataOfTrade = ({ trade }) => {\r\n    return (\r\n        <div className=\"trade\">\r\n            <div className=\"trade-infos\">\r\n                <div className=\"trade-infos_session\">\r\n                    <div className=\"session-right\">\r\n                        <Image src={trade.platformLogo} size=\"big\" style={{ display: \"block\", width: \"100%\" }} />\r\n                    </div>\r\n                    <div className=\"session-left\">\r\n                        <div className=\"session-container\">\r\n                            <div className=\"session-entrydate\">{trade.entryDate}</div>\r\n                            <Icon name=\"long arrow alternate right\" style={{ display: \"block\", width: \"10%\" }} />\r\n                            <div className=\"session-exitdate\">{trade.exitDate}</div>\r\n                        </div>\r\n                        <div className=\"duration-container\">\r\n                            <Icon name=\"time\" />\r\n                            {trade.sessionDuration}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"trade-infos_details\">\r\n                    <List divided relaxed>\r\n                        <List.Item className=\"trade-infos__item\" style={{ display: \"flex\" }}>\r\n                            <div className=\"\" style={{ marginRight: \"2em\", display: \"flex\", alignItems: \"center\" }}>\r\n                                <Label color=\"blue\" horizontal size=\"large\">\r\n                                    Capital\r\n                                </Label>\r\n                                <div className=\"capital\">{trade.capital}$</div>\r\n                            </div>\r\n                            <div className=\"\" style={{ marginRight: \"2em\", display: \"flex\", alignItems: \"center\" }}>\r\n                                <Label color=\"red\" horizontal size=\"large\">\r\n                                    Risk Ratio\r\n                                </Label>\r\n                                <div className=\"risk\">{trade.riskRatio}</div>\r\n                            </div>\r\n                        </List.Item>\r\n\r\n                        <List.Item className=\"trade-infos__item\" style={{ display: \"flex\" }}>\r\n                            <Label color=\"violet\" horizontal size=\"large\">\r\n                                Levier\r\n                            </Label>\r\n                            <SliderComp leverage={trade.leverage} />\r\n                        </List.Item>\r\n\r\n                        <List.Item className=\"trade-infos__item\">\r\n                            <Label color=\"green\" horizontal size=\"large\">\r\n                                Setup\r\n                            </Label>\r\n                            <Dropdown\r\n                                style={{ fontSize: \".7em\" }}\r\n                                placeholder=\"Select Setup\"\r\n                                defaultValue={trade.setup}\r\n                                size=\"\"\r\n                                scrolling\r\n                                selection\r\n                                options={setupList}\r\n                            />\r\n                        </List.Item>\r\n                    </List>\r\n\r\n                    <div className=\"\">\r\n                        Note:\r\n                        <Form>\r\n                            <TextArea\r\n                                className=\"note\"\r\n                                rows={2}\r\n                                rows={10}\r\n                                placeholder=\"Dans quel √©tat d'esprit √™tes-vous ? Est-ce que vous √™tes confiant √† l'id√©e de prendre ce trade ? Ce trade respect-il votre trading plan?\"\r\n                            />\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"trade-setup\">\r\n                <div className=\"trade-edit\">\r\n                    <Icon name=\"edit\" style={{ cursor: \"pointer\" }} />\r\n                </div>\r\n                <Image src={trade.screenshotUrl} className=\"trade-screenshot\" size=\"large\" />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst TradeLogger = () => {\r\n    const [selectedRow, setSelectedRow] = useState({});\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const handleShowTrade = (trade) => {\r\n        if (selectedRow.id === trade.id) {\r\n            setSelectedRow({});\r\n        } else {\r\n            setSelectedRow(trade);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout title=\"Trade Logger\">\r\n            <div className=\"tradelogger\">\r\n                <div className=\"action\">\r\n                    <AddModal showModal={showModal} setShowModal={setShowModal} setupList={setupList} />\r\n                </div>\r\n                <Table basic=\"very\" celled inverted selectable textAlign=\"center\">\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell>Status</Table.HeaderCell>\r\n                            <Table.HeaderCell>Assets</Table.HeaderCell>\r\n                            <Table.HeaderCell>Type</Table.HeaderCell>\r\n                            <Table.HeaderCell>Entry Price</Table.HeaderCell>\r\n                            <Table.HeaderCell>Stop Loss</Table.HeaderCell>\r\n                            <Table.HeaderCell>Take Profit</Table.HeaderCell>\r\n                            <Table.HeaderCell>Leaving Price</Table.HeaderCell>\r\n                            <Table.HeaderCell>PnL ($)</Table.HeaderCell>\r\n                            <Table.HeaderCell>PnL (%)</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n\r\n                    <Table.Body>\r\n                        {FakeData.data.map((trade) => (\r\n                            <>\r\n                                <Table.Row\r\n                                    style={{ cursor: \"pointer\" }}\r\n                                    onClick={() => handleShowTrade(trade)}\r\n                                    key={trade.id}\r\n                                    active={selectedRow && selectedRow.id === trade.id}\r\n                                >\r\n                                    <Table.Cell>{trade.status}</Table.Cell>\r\n                                    <Table.Cell>{trade.assets}</Table.Cell>\r\n                                    <Table.Cell>{trade.type}</Table.Cell>\r\n                                    <Table.Cell>{trade.entryPrice}</Table.Cell>\r\n                                    <Table.Cell>{trade.stopLoss}</Table.Cell>\r\n                                    <Table.Cell>{trade.takeProfit}</Table.Cell>\r\n                                    <Table.Cell>{trade.leavingProfit}</Table.Cell>\r\n                                    <Table.Cell>{trade.pnl}$</Table.Cell>\r\n                                    <Table.Cell>{trade.pnl_per}%</Table.Cell>\r\n                                </Table.Row>\r\n                                {selectedRow && selectedRow.id === trade.id && (\r\n                                    <Table.Row textAlign=\"left\">\r\n                                        <Table.Cell colSpan={9}>\r\n                                            <AllDataOfTrade trade={trade} />\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                )}\r\n                            </>\r\n                        ))}\r\n                    </Table.Body>\r\n                </Table>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default TradeLogger;\r\n","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\AddModal\\AddModal.js",["52"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Login\\Login.js",["53","54"],"import React from \"react\";\r\nimport { Form, Input, Label, Button, Image } from \"semantic-ui-react\";\r\nimport \"./login.scss\";\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login-form\">\r\n                <Image src=\"./logo.png\" size=\"small\" className=\"form-logo\" />\r\n                <Form className=\"form\" onSubmit={\"\"}>\r\n                    <Form.Field>\r\n                        <label>Email</label>\r\n                        <Form.Input placeholder=\"youremail@gmail.com\" type=\"text\" />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label>Password</label>\r\n                        <Form.Input placeholder=\"********\" type=\"password\" />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <div className=\"form-error\">Erreur</div>\r\n                    </Form.Field>\r\n                    <Button primary className=\"form-submit\" type=\"submit\">\r\n                        Connexion\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n",{"ruleId":"55","severity":1,"message":"56","line":2,"column":50,"nodeType":"57","messageId":"58","endLine":2,"endColumn":54},{"ruleId":"55","severity":1,"message":"59","line":3,"column":10,"nodeType":"57","messageId":"58","endLine":3,"endColumn":16},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"55","severity":1,"message":"56","line":2,"column":10,"nodeType":"57","messageId":"58","endLine":2,"endColumn":14},{"ruleId":"55","severity":1,"message":"64","line":3,"column":19,"nodeType":"57","messageId":"58","endLine":3,"endColumn":25},{"ruleId":"55","severity":1,"message":"65","line":8,"column":23,"nodeType":"57","messageId":"58","endLine":8,"endColumn":28},{"ruleId":"55","severity":1,"message":"59","line":2,"column":69,"nodeType":"57","messageId":"58","endLine":2,"endColumn":75},{"ruleId":"66","severity":1,"message":"67","line":124,"column":33,"nodeType":"68","endLine":124,"endColumn":42},{"ruleId":"55","severity":1,"message":"69","line":2,"column":51,"nodeType":"57","messageId":"58","endLine":2,"endColumn":59},{"ruleId":"55","severity":1,"message":"70","line":2,"column":16,"nodeType":"57","messageId":"58","endLine":2,"endColumn":21},{"ruleId":"55","severity":1,"message":"71","line":2,"column":23,"nodeType":"57","messageId":"58","endLine":2,"endColumn":28},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"'Header' is defined but never used.","'title' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Checkbox' is defined but never used.","'Input' is defined but never used.","'Label' is defined but never used.","no-global-assign","no-unsafe-negation"]