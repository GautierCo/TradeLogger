[{"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\App.js":"1","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Plan\\Plan.js":"2","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Layout.js":"3","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Invest.container.js":"4","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\TradeLogger.js":"5","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\trade.reducer.js":"6","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\trade.middleware.js":"7","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\store.js":"8","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\index.js":"9","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Plan.container.js":"10","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\auth.reducer.js":"11","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\HomeSite\\HomeSite.js":"12","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\trade.actions.js":"13","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\FormTrade\\FormTrade.js":"14","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\AddTrade\\AddTrade.js":"15","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\UpdateTrade\\UpdateTrade.js":"16","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\index.js":"17","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\auth.middleware.js":"18","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Market\\Market.js":"19","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Utils\\trade.utils.js":"20","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\refreshToken.middleware.js":"21","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\HomeSite.container.js":"22","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\HomeDashboard\\HomeDashboard.js":"23","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\Signup\\Signup.js":"24","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\index.js":"25","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\Login.container.js":"26","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Invest\\Invest.js":"27","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainerWithPer.js":"28","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainer.js":"29","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\HomeDashboard.container.js":"30","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Layout.container.js":"31","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Market.container.js":"32","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Routes\\protected.routes.js":"33","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\auth.actions.js":"34","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\Journal.js":"35","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\Login\\Login.js":"36","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\Signup.container.js":"37","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\note.middleware.js":"38","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\AddNote\\AddNote.js":"39","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\FormNote\\FormNote.js":"40","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\note.actions.js":"41","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\note.reducer.js":"42","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Trades\\TradeLogger.container.js":"43","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Trades\\AddTrade.container.js":"44","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Notes\\Journal.container.js":"45","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\UpdateNote\\UpdateNote.js":"46","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Notes\\UpdateNote.container.js":"47","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\reportWebVitals.js":"48","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Notes\\AddNote.container.js":"49","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Trades\\UpdateTrade.container.js":"50"},{"size":2061,"mtime":1616005406558,"results":"51","hashOfConfig":"52"},{"size":194,"mtime":1610730089353,"results":"53","hashOfConfig":"52"},{"size":3848,"mtime":1616508439380,"results":"54","hashOfConfig":"52"},{"size":270,"mtime":1610729973510,"results":"55","hashOfConfig":"52"},{"size":15177,"mtime":1616005278666,"results":"56","hashOfConfig":"52"},{"size":6034,"mtime":1616114811588,"results":"57","hashOfConfig":"52"},{"size":5269,"mtime":1616087805525,"results":"58","hashOfConfig":"52"},{"size":1311,"mtime":1615825079303,"results":"59","hashOfConfig":"52"},{"size":669,"mtime":1610591537162,"results":"60","hashOfConfig":"52"},{"size":262,"mtime":1610730058707,"results":"61","hashOfConfig":"52"},{"size":3630,"mtime":1616596321969,"results":"62","hashOfConfig":"52"},{"size":381,"mtime":1610298093219,"results":"63","hashOfConfig":"52"},{"size":2516,"mtime":1611180892574,"results":"64","hashOfConfig":"52"},{"size":16283,"mtime":1611254763131,"results":"65","hashOfConfig":"52"},{"size":2508,"mtime":1611180980001,"results":"66","hashOfConfig":"52"},{"size":3801,"mtime":1611225451687,"results":"67","hashOfConfig":"52"},{"size":1423,"mtime":1610775209090,"results":"68","hashOfConfig":"52"},{"size":3068,"mtime":1616609423356,"results":"69","hashOfConfig":"52"},{"size":200,"mtime":1610729852704,"results":"70","hashOfConfig":"52"},{"size":4907,"mtime":1611247585730,"results":"71","hashOfConfig":"52"},{"size":1317,"mtime":1610689702927,"results":"72","hashOfConfig":"52"},{"size":273,"mtime":1610554501129,"results":"73","hashOfConfig":"52"},{"size":639,"mtime":1616592350466,"results":"74","hashOfConfig":"52"},{"size":6294,"mtime":1616596517676,"results":"75","hashOfConfig":"52"},{"size":388,"mtime":1615824619532,"results":"76","hashOfConfig":"52"},{"size":647,"mtime":1610638094846,"results":"77","hashOfConfig":"52"},{"size":200,"mtime":1610729990565,"results":"78","hashOfConfig":"52"},{"size":3676,"mtime":1611056627597,"results":"79","hashOfConfig":"52"},{"size":687,"mtime":1611050376138,"results":"80","hashOfConfig":"52"},{"size":344,"mtime":1611167016602,"results":"81","hashOfConfig":"52"},{"size":410,"mtime":1611167169813,"results":"82","hashOfConfig":"52"},{"size":270,"mtime":1610729823767,"results":"83","hashOfConfig":"52"},{"size":330,"mtime":1610591835673,"results":"84","hashOfConfig":"52"},{"size":1680,"mtime":1610640866062,"results":"85","hashOfConfig":"52"},{"size":4282,"mtime":1616432175510,"results":"86","hashOfConfig":"52"},{"size":2246,"mtime":1610652311501,"results":"87","hashOfConfig":"52"},{"size":583,"mtime":1610652545475,"results":"88","hashOfConfig":"52"},{"size":3178,"mtime":1616591215491,"results":"89","hashOfConfig":"52"},{"size":1282,"mtime":1616590575979,"results":"90","hashOfConfig":"52"},{"size":2753,"mtime":1616591800299,"results":"91","hashOfConfig":"52"},{"size":2130,"mtime":1616590893757,"results":"92","hashOfConfig":"52"},{"size":3294,"mtime":1616590958823,"results":"93","hashOfConfig":"52"},{"size":684,"mtime":1616005337998,"results":"94","hashOfConfig":"52"},{"size":770,"mtime":1616005350541,"results":"95","hashOfConfig":"52"},{"size":738,"mtime":1616010195631,"results":"96","hashOfConfig":"52"},{"size":1171,"mtime":1616591148917,"results":"97","hashOfConfig":"52"},{"size":745,"mtime":1616591137447,"results":"98","hashOfConfig":"52"},{"size":362,"mtime":1609121759416,"results":"99","hashOfConfig":"52"},{"size":598,"mtime":1616005781771,"results":"100","hashOfConfig":"52"},{"size":1078,"mtime":1616005138798,"results":"101","hashOfConfig":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cywuev",{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"143"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"106"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\App.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Plan\\Plan.js",[],["217","218"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Layout.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Invest.container.js",[],["219","220"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\TradeLogger.js",[],["221","222"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\trade.reducer.js",[],["223","224"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\trade.middleware.js",["225"],"import axios from \"axios\";\r\nimport {\r\n    FETCH_TRADES,\r\n    fetchTradesSuccess,\r\n    fetchTradesError,\r\n    ADD_TRADE,\r\n    addTradeSuccess,\r\n    addTradeError,\r\n    SET_TRADE_UPDATE_ID,\r\n    setTradeUpdateData,\r\n    UPDATE_TRADE,\r\n    updateTradeSuccess,\r\n    updateTradeError,\r\n    DELETE_TRADE,\r\n    deleteTradeSuccess,\r\n    deleteTradeError,\r\n    setShowAddModal,\r\n    setShowUpdateModal,\r\n} from \"../actions/trade.actions\";\r\nimport { validateForm } from \"../../Utils/trade.utils\";\r\n\r\nexport const tradeMiddleware = (store) => (next) => (action) => {\r\n    next(action);\r\n    switch (action.type) {\r\n        case FETCH_TRADES: {\r\n            axios({\r\n                method: \"GET\",\r\n                url: `${process.env.REACT_APP_API_URL}/trade/`,\r\n            })\r\n                .then((res) => {\r\n                    store.dispatch(fetchTradesSuccess(res.data.trades));\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    store.dispatch(fetchTradesError());\r\n                });\r\n            break;\r\n        }\r\n        case ADD_TRADE: {\r\n            const { tradeData } = store.getState().tradeReducer;\r\n            const { user } = store.getState().authReducer;\r\n\r\n            let errors = validateForm(tradeData);\r\n\r\n            console.log(\"errors\", errors);\r\n\r\n            if (errors) {\r\n                store.dispatch(addTradeError(errors));\r\n                break;\r\n            }\r\n            axios({\r\n                method: \"POST\",\r\n                url: `${process.env.REACT_APP_API_URL}/trade/`,\r\n                data: { ...tradeData, userId: user.id },\r\n            })\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (!res.data.error) {\r\n                        store.dispatch(addTradeSuccess({ ...res.data }));\r\n                        store.dispatch(setShowAddModal(false));\r\n                    } else {\r\n                        const errorsRes = res.data.error.errors;\r\n                        for (const err in errorsRes) {\r\n                            errors = { ...errors, [err]: \"Erreur\" };\r\n                        }\r\n                        store.dispatch(addTradeError(errors));\r\n                        console.log(errors);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    store.dispatch(addTradeError());\r\n                });\r\n\r\n            break;\r\n        }\r\n        case SET_TRADE_UPDATE_ID: {\r\n            const { trades } = store.getState().tradeReducer;\r\n            const tradeUpdateSelect = action.payload;\r\n\r\n            const trade = trades.find((trade) => trade._id === tradeUpdateSelect);\r\n\r\n            store.dispatch(setTradeUpdateData(trade));\r\n            break;\r\n        }\r\n        case UPDATE_TRADE: {\r\n            console.log(\"UDAPTE trade\");\r\n            const { tradeUpdateData, trades } = store.getState().tradeReducer;\r\n            const { user } = store.getState().authReducer;\r\n\r\n            let errors = validateForm(tradeUpdateData);\r\n\r\n            if (errors) {\r\n                store.dispatch(updateTradeError(errors));\r\n                break;\r\n            }\r\n\r\n            axios({\r\n                method: \"PATCH\",\r\n                url: `${process.env.REACT_APP_API_URL}/trade/${tradeUpdateData._id}`,\r\n                data: { ...tradeUpdateData, userId: user.id },\r\n            })\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (res.data.error) {\r\n                        const errorRes = res.data.error;\r\n\r\n                        errors = { ...errors, [errorRes.path]: \"Erreur\" };\r\n\r\n                        store.dispatch(updateTradeError(errors));\r\n                        console.log(errors);\r\n                    } else {\r\n                        const tradesUpdate = trades.map((trade) => {\r\n                            if (trade._id === tradeUpdateData._id) {\r\n                                return res.data.doc;\r\n                            } else {\r\n                                return trade;\r\n                            }\r\n                        });\r\n\r\n                        store.dispatch(updateTradeSuccess(tradesUpdate));\r\n                        store.dispatch(setShowUpdateModal(false));\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    store.dispatch(updateTradeError());\r\n                });\r\n\r\n            break;\r\n        }\r\n        case DELETE_TRADE: {\r\n            console.log(\"delete trade\");\r\n            const { trades, tradeUpdateId } = store.getState().tradeReducer;\r\n\r\n            axios({\r\n                method: \"DELETE\",\r\n                url: `${process.env.REACT_APP_API_URL}/trade/${tradeUpdateId}`,\r\n            })\r\n                .then((res) => {\r\n                    let removeTrade = trades.filter((trade) => trade._id !== tradeUpdateId);\r\n                    store.dispatch(deleteTradeSuccess(removeTrade));\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    store.dispatch(deleteTradeError());\r\n                });\r\n\r\n            break;\r\n        }\r\n    }\r\n};\r\n",["226","227"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\store.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\index.js",[],["228","229"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Plan.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\auth.reducer.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\HomeSite\\HomeSite.js",[],["230","231"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\trade.actions.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\FormTrade\\FormTrade.js",["232","233"],"import React from \"react\";\r\nimport { Form, Input, Select, TextArea, Popup, Label } from \"semantic-ui-react\";\r\n\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport fr from \"date-fns/locale/fr\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nregisterLocale(\"fr\", fr);\r\n\r\nconst typeSelect = [\r\n    { key: \"long\", value: \"Long\", text: \"Long\" },\r\n    { key: \"short\", value: \"Short\", text: \"Short\" },\r\n];\r\nconst platformSelect = [\r\n    { key: \"binance\", value: \"Binance\", text: \"Binance\" },\r\n    { key: \"ftx\", value: \"FTX\", text: \"FTX\" },\r\n    { key: \"bittrex\", value: \"Bittrex\", text: \"Bittrex\" },\r\n    { key: \"kraken\", value: \"Kraken\", text: \"Kraken\" },\r\n    { key: \"coinbase\", value: \"Coinbase\", text: \"Coinbase\" },\r\n];\r\n\r\nconst setupList = [\r\n    {\r\n        key: \"Ichimoku\",\r\n        text: \"Ichimoku\",\r\n        value: \"Ichimoku\",\r\n    },\r\n    {\r\n        key: \"W\",\r\n        text: \"W\",\r\n        value: \"W\",\r\n    },\r\n];\r\n\r\nconst formatList = [\r\n    {\r\n        key: \"USDT\",\r\n        text: \"USDT\",\r\n        value: \"USDT\",\r\n    },\r\n    {\r\n        key: \"USD\",\r\n        text: \"USD\",\r\n        value: \"USD\",\r\n    },\r\n    {\r\n        key: \"BTC\",\r\n        text: \"BTC\",\r\n        value: \"BTC\",\r\n    },\r\n];\r\n\r\nconst errorLabelColor = \"#fc4136\";\r\nconst errorBorderColor = \"1px solid rgb(252 65 54 / 64%)\";\r\n\r\nconst FormModal = ({ tradeData, setTradeData, errors }) => {\r\n    const handleChange = (e, data) => {\r\n        const { name, value } = data ? data : e.target;\r\n        const dataForm = {\r\n            ...tradeData,\r\n            [name]: value,\r\n        };\r\n        setTradeData(dataForm);\r\n    };\r\n\r\n    return (\r\n        <div className=\"modalform\">\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <Popup\r\n                            content=\"Calculations are different when you trade against BTC or USD\"\r\n                            trigger={\r\n                                <label style={errors && errors.format && { color: errorLabelColor }}>Format *</label>\r\n                            }\r\n                        />\r\n                        <Select\r\n                            style={errors && errors.format && { border: errorBorderColor }}\r\n                            name=\"format\"\r\n                            placeholder=\"Choose..\"\r\n                            options={formatList}\r\n                            value={tradeData.format}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                    {tradeData.format === \"BTC\" && (\r\n                        <Form.Field>\r\n                            <Popup\r\n                                content=\"The price of Bitcoin at the time you close your trade. So we can calculate your profit.\"\r\n                                trigger={\r\n                                    <label style={errors && errors.priceBtcVsUsd && { color: errorLabelColor }}>\r\n                                        Price BTC vs USD\r\n                                    </label>\r\n                                }\r\n                            />\r\n                            <Input\r\n                                style={errors && errors.priceBtcVsUsd && { border: errorBorderColor }}\r\n                                name=\"priceBtcVsUsd\"\r\n                                type=\"text\"\r\n                                onChange={handleChange}\r\n                                placeholder=\"35200\"\r\n                                label=\"$\"\r\n                                labelPosition={\"right corner\"}\r\n                                value={tradeData.priceBtcVsUsd}\r\n                            />\r\n                        </Form.Field>\r\n                    )}\r\n                    <Form.Field>\r\n                        <Popup\r\n                            content=\"If you want, you can add screenshot for your trade. (URL)\"\r\n                            trigger={\r\n                                <label style={errors && errors.screenshotUrl && { color: errorLabelColor }}>\r\n                                    Screenshot URL\r\n                                </label>\r\n                            }\r\n                        />\r\n\r\n                        <Input\r\n                            style={errors && errors.screenshotUrl && { border: errorBorderColor }}\r\n                            name=\"screenshotUrl\"\r\n                            type=\"text\"\r\n                            onChange={handleChange}\r\n                            placeholder=\"https://tradingview.com/x/gFRYCH3B/\"\r\n                            value={tradeData.screenshotUrl}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.platform && { color: errorLabelColor }}>Platform *</label>\r\n                        <Select\r\n                            style={errors && errors.platform && { border: errorBorderColor }}\r\n                            placeholder=\"Choose..\"\r\n                            name=\"platform\"\r\n                            options={platformSelect}\r\n                            onChange={handleChange}\r\n                            value={tradeData.platform}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.type && { color: errorLabelColor }}>Type *</label>\r\n                        <Select\r\n                            style={errors && errors.type && { border: errorBorderColor }}\r\n                            placeholder=\"Choose..\"\r\n                            name=\"type\"\r\n                            options={typeSelect}\r\n                            onChange={handleChange}\r\n                            value={tradeData.type}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <Popup\r\n                            content={\r\n                                <>\r\n                                    <p>If the format is USDT : Example : EGLD/USD ou BTC/USD.</p>\r\n                                    <p>If the format is BTC : Example : EGLD/BTC</p>\r\n                                </>\r\n                            }\r\n                            trigger={\r\n                                <label style={errors && errors.assets && { color: errorLabelColor }}>Assets *</label>\r\n                            }\r\n                        />\r\n                        <Input\r\n                            style={errors && errors.assets && { border: errorBorderColor }}\r\n                            name=\"assets\"\r\n                            placeholder={tradeData.format !== \"BTC\" ? `BTC/USDT` : `EGLD/BTC`}\r\n                            value={tradeData.assets}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <Popup\r\n                            content=\"With what amount will you make this trade? If you are against the BTC, you must indicate an amount in Bitcoin.\"\r\n                            trigger={\r\n                                <label style={errors && errors.capital && { color: errorLabelColor }}>Capital *</label>\r\n                            }\r\n                        />\r\n                        <Input\r\n                            style={errors && errors.capital && { border: errorBorderColor }}\r\n                            name=\"capital\"\r\n                            placeholder=\"1000\"\r\n                            type=\"text\"\r\n                            pattern=\"^\\d*(\\.\\d{0,2})?$\"\r\n                            value={tradeData.capital}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.entryPrice && { color: errorLabelColor }}>Entry Price *</label>\r\n                        <Input\r\n                            style={errors && errors.entryPrice && { border: errorBorderColor }}\r\n                            name=\"entryPrice\"\r\n                            placeholder=\"34589\"\r\n                            value={tradeData.entryPrice}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.stopLoss && { color: errorLabelColor }}>Stop Loss</label>\r\n                        <Input\r\n                            style={errors && errors.stopLoss && { border: errorBorderColor }}\r\n                            name=\"stopLoss\"\r\n                            placeholder=\"33187\"\r\n                            value={tradeData.stopLoss}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.takeProfit && { color: errorLabelColor }}>Take Profit</label>\r\n                        <Input\r\n                            style={errors && errors.takeProfit && { border: errorBorderColor }}\r\n                            name=\"takeProfit\"\r\n                            placeholder=\"36897\"\r\n                            value={tradeData.takeProfit}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <Popup\r\n                            content=\"You can leave this box blank while waiting for your trade to be closed.\"\r\n                            trigger={\r\n                                <label style={errors && errors.exitPrice && { color: errorLabelColor }}>\r\n                                    Leaving Price\r\n                                </label>\r\n                            }\r\n                        />\r\n                        <Input\r\n                            style={errors && errors.exitPrice && { border: errorBorderColor }}\r\n                            name=\"exitPrice\"\r\n                            placeholder=\"36897\"\r\n                            value={tradeData.exitPrice && tradeData.exitPrice}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.riskRatio && { color: errorLabelColor }}>Risk Ratio</label>\r\n                        <Input\r\n                            style={errors && errors.riskRatio && { border: errorBorderColor }}\r\n                            name=\"riskRatio\"\r\n                            placeholder=\"2\"\r\n                            value={tradeData.riskRatio}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n\r\n                    <Form.Field>\r\n                        <label>Setup</label>\r\n                        <Select\r\n                            name=\"setup\"\r\n                            placeholder=\"Choose..\"\r\n                            options={setupList}\r\n                            value={tradeData.setup}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label>{`Levier: x${tradeData.leverage} `}</label>\r\n                        <Input\r\n                            min={1}\r\n                            max={125}\r\n                            name=\"leverage\"\r\n                            step={1}\r\n                            type=\"range\"\r\n                            onChange={handleChange}\r\n                            value={tradeData.leverage}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <Popup\r\n                            content=\"Your fee percentage (%). If you have 1% fee, write only 1.\"\r\n                            trigger={<label style={errors && errors.fees && { color: errorLabelColor }}>Fees *</label>}\r\n                        />\r\n                        <Input\r\n                            style={errors && errors.fees && { border: errorBorderColor }}\r\n                            name=\"fees\"\r\n                            placeholder=\"1\"\r\n                            value={tradeData.fees}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.entryDate && { color: errorLabelColor }}>Entry Date</label>\r\n                        <DatePicker\r\n                            style={errors && errors.entryDate && { border: errorBorderColor }}\r\n                            name=\"entryDate\"\r\n                            selected={Date.parse(tradeData.entryDate)}\r\n                            onChange={(date) => {\r\n                                console.log(date);\r\n                                setTradeData({\r\n                                    ...tradeData,\r\n                                    entryDate: date,\r\n                                });\r\n                            }}\r\n                            showTimeSelect\r\n                            locale=\"fr\"\r\n                            timeFormat=\"p\"\r\n                            timeIntervals={5}\r\n                            dateFormat=\"Pp\"\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.exitDate && { color: errorLabelColor }}>Exit Date</label>\r\n                        <DatePicker\r\n                            style={errors && errors.exitDate && { border: errorBorderColor }}\r\n                            name=\"exitDate\"\r\n                            selected={Date.parse(tradeData.exitDate)}\r\n                            onChange={(date) => {\r\n                                setTradeData({\r\n                                    ...tradeData,\r\n                                    exitDate: date,\r\n                                });\r\n                            }}\r\n                            showTimeSelect\r\n                            locale=\"fr\"\r\n                            timeFormat=\"p\"\r\n                            timeIntervals={5}\r\n                            dateFormat=\"Pp\"\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Field>\r\n                    <label style={errors && errors.feeling && { color: errorLabelColor }}>Feeling</label>\r\n                    <Input\r\n                        style={errors && errors.feeling && { border: errorBorderColor }}\r\n                        name=\"feeling\"\r\n                        onChange={handleChange}\r\n                        value={tradeData.feeling}\r\n                        placeholder=\"Feeling about this trade\"\r\n                    />\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                    <label style={errors && errors.notes && { color: errorLabelColor }}>Notes :</label>\r\n                    <TextArea\r\n                        style={errors && errors.notes && { border: errorBorderColor }}\r\n                        name=\"note\"\r\n                        value={tradeData.note}\r\n                        onChange={handleChange}\r\n                        className=\"note\"\r\n                        rows={2}\r\n                        rows={10}\r\n                        placeholder=\"What is your state of mind? Are you confident about taking this trade? Is this trade in accordance with your trading plan?\"\r\n                    />\r\n                </Form.Field>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormModal;\r\n","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\AddTrade\\AddTrade.js",["234","235"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\UpdateTrade\\UpdateTrade.js",[],["236","237"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\index.js",[],["238","239"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\auth.middleware.js",["240"],"import axios from \"axios\";\r\nimport { persistor } from \"../store\";\r\nimport {\r\n    loginSubmitError,\r\n    loginSubmitSuccess,\r\n    LOGIN_SUBMIT,\r\n    LOGOUT,\r\n    logoutError,\r\n    logoutSuccess,\r\n    signupSubmitError,\r\n    signupSubmitSuccess,\r\n    SIGNUP_SUBMIT,\r\n} from \"../actions/auth.actions\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nexport const authMiddleware = (store) => (next) => (action) => {\r\n    next(action);\r\n\r\n    switch (action.type) {\r\n        case LOGIN_SUBMIT: {\r\n            const loginData = store.getState().authReducer.loginData;\r\n\r\n            axios({\r\n                method: \"POST\",\r\n                url: `${process.env.REACT_APP_API_URL}/auth/login`,\r\n                withCredentials: true,\r\n                data: loginData,\r\n            })\r\n                .then((res) => {\r\n                    const { data } = res;\r\n\r\n                    console.log(data.message);\r\n\r\n                    if (data.message) {\r\n                        return store.dispatch(loginSubmitError({ message: data.message }));\r\n                    }\r\n\r\n                    if (res.status !== 201) return store.dispatch(loginSubmitError());\r\n\r\n                    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${data.accessToken}`;\r\n\r\n                    store.dispatch(loginSubmitSuccess(data));\r\n                    store.dispatch(push(\"/dashboard\"));\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"err\", err);\r\n                    store.dispatch(loginSubmitError(err));\r\n                });\r\n            break;\r\n        }\r\n        case LOGOUT: {\r\n            axios({\r\n                method: \"GET\",\r\n                url: `${process.env.REACT_APP_API_URL}/auth/logout`,\r\n            })\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    store.dispatch(logoutSuccess(res.data));\r\n\r\n                    persistor.purge();\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    store.dispatch(logoutError());\r\n                });\r\n            break;\r\n        }\r\n        case SIGNUP_SUBMIT: {\r\n            const signupData = store.getState().authReducer.signupData;\r\n\r\n            axios({\r\n                method: \"POST\",\r\n                url: `${process.env.REACT_APP_API_URL}/auth/signup`,\r\n                withCredentials: true,\r\n                data: signupData,\r\n            })\r\n                .then((res) => {\r\n                    const { data } = res;\r\n\r\n                    if (data.errors) {\r\n                        return store.dispatch(signupSubmitError(data.errors));\r\n                    }\r\n\r\n                    if (res.status !== 201) return;\r\n\r\n                    store.dispatch(signupSubmitSuccess(data));\r\n                    store.dispatch(push(\"/dashboard\"));\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    store.dispatch(signupSubmitError());\r\n                });\r\n            break;\r\n        }\r\n    }\r\n};\r\n","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Market\\Market.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Utils\\trade.utils.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\refreshToken.middleware.js",[],["241","242"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\HomeSite.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\HomeDashboard\\HomeDashboard.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\Signup\\Signup.js",["243","244","245"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\index.js",[],["246","247"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\Login.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Invest\\Invest.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainerWithPer.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainer.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\HomeDashboard.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Layout.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Market.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Routes\\protected.routes.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\auth.actions.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\Journal.js",["248","249","250"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\Login\\Login.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\Signup.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\note.middleware.js",["251"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\AddNote\\AddNote.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\FormNote\\FormNote.js",["252"],"import React from \"react\";\r\nimport { Button, Form, Icon } from \"semantic-ui-react\";\r\nimport \"./style.scss\";\r\n\r\nconst FormNote = ({ setShowModal, setNoteData, noteData, submitForm, update, deleteNote }) => {\r\n    const handleChange = (e, data) => {\r\n        const { name, value } = data ? data : e.target;\r\n        const dataForm = {\r\n            ...noteData,\r\n            [name]: value,\r\n        };\r\n        setNoteData(dataForm);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        submitForm();\r\n        // if no error\r\n        setShowModal(false);\r\n    };\r\n    return (\r\n        <div className=\"formnote\">\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Field>\r\n                    <Form.Input placeholder=\"Your title\" name=\"title\" onChange={handleChange} value={noteData.title} />\r\n                    <Form.TextArea\r\n                        placeholder=\"Your content\"\r\n                        name=\"content\"\r\n                        onChange={handleChange}\r\n                        rows={2}\r\n                        rows={10}\r\n                        value={noteData.content}\r\n                    />\r\n                    <div className=\"formnote-feelings\">\r\n                        <div className=\"formnote-feelings_title\">Feeling: </div>\r\n                        <Icon\r\n                            name=\"smile\"\r\n                            size=\"big\"\r\n                            color={noteData.feeling === 1 ? `green` : \"grey\"}\r\n                            onClick={() => setNoteData({ ...noteData, feeling: 1 })}\r\n                        />\r\n                        <Icon\r\n                            name=\"meh\"\r\n                            size=\"big\"\r\n                            color={noteData.feeling === 2 ? `green` : \"grey\"}\r\n                            onClick={() => setNoteData({ ...noteData, feeling: 2 })}\r\n                        />\r\n                        <Icon\r\n                            name=\"frown\"\r\n                            size=\"big\"\r\n                            color={noteData.feeling === 3 ? `green` : \"grey\"}\r\n                            onClick={() => setNoteData({ ...noteData, feeling: 3 })}\r\n                        />\r\n                    </div>\r\n                </Form.Field>\r\n                <div className=\"btn-container\">\r\n                    {update && (\r\n                        <Button color=\"red\" onClick={() => deleteNote()} type=\"button\">\r\n                            Delete\r\n                        </Button>\r\n                    )}\r\n                    <Button secondary type=\"submit\">\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormNote;\r\n","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\note.actions.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\note.reducer.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Trades\\TradeLogger.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Trades\\AddTrade.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Notes\\Journal.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\UpdateNote\\UpdateNote.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Notes\\UpdateNote.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Notes\\AddNote.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Trades\\UpdateTrade.container.js",[],{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"253","replacedBy":"257"},{"ruleId":"255","replacedBy":"258"},{"ruleId":"253","replacedBy":"259"},{"ruleId":"255","replacedBy":"260"},{"ruleId":"253","replacedBy":"261"},{"ruleId":"255","replacedBy":"262"},{"ruleId":"263","severity":1,"message":"264","line":24,"column":5,"nodeType":"265","messageId":"266","endLine":151,"endColumn":6},{"ruleId":"253","replacedBy":"267"},{"ruleId":"255","replacedBy":"268"},{"ruleId":"253","replacedBy":"269"},{"ruleId":"255","replacedBy":"270"},{"ruleId":"253","replacedBy":"271"},{"ruleId":"255","replacedBy":"272"},{"ruleId":"273","severity":1,"message":"274","line":2,"column":48,"nodeType":"275","messageId":"276","endLine":2,"endColumn":53},{"ruleId":"277","severity":1,"message":"278","line":356,"column":25,"nodeType":"279","endLine":356,"endColumn":34},{"ruleId":"273","severity":1,"message":"280","line":2,"column":31,"nodeType":"275","messageId":"276","endLine":2,"endColumn":36},{"ruleId":"273","severity":1,"message":"281","line":2,"column":38,"nodeType":"275","messageId":"276","endLine":2,"endColumn":45},{"ruleId":"253","replacedBy":"282"},{"ruleId":"255","replacedBy":"283"},{"ruleId":"253","replacedBy":"284"},{"ruleId":"255","replacedBy":"285"},{"ruleId":"263","severity":1,"message":"264","line":19,"column":5,"nodeType":"265","messageId":"266","endLine":95,"endColumn":6},{"ruleId":"253","replacedBy":"286"},{"ruleId":"255","replacedBy":"287"},{"ruleId":"288","severity":1,"message":"289","line":25,"column":36,"nodeType":"290","messageId":"291","endLine":25,"endColumn":37,"suggestions":"292"},{"ruleId":"288","severity":1,"message":"289","line":25,"column":61,"nodeType":"290","messageId":"291","endLine":25,"endColumn":62,"suggestions":"293"},{"ruleId":"294","severity":1,"message":"295","line":41,"column":8,"nodeType":"296","endLine":41,"endColumn":10,"suggestions":"297"},{"ruleId":"253","replacedBy":"298"},{"ruleId":"255","replacedBy":"299"},{"ruleId":"273","severity":1,"message":"300","line":4,"column":8,"nodeType":"275","messageId":"276","endLine":4,"endColumn":18},{"ruleId":"273","severity":1,"message":"301","line":14,"column":12,"nodeType":"275","messageId":"276","endLine":14,"endColumn":20},{"ruleId":"273","severity":1,"message":"302","line":14,"column":22,"nodeType":"275","messageId":"276","endLine":14,"endColumn":33},{"ruleId":"263","severity":1,"message":"264","line":19,"column":5,"nodeType":"265","messageId":"266","endLine":95,"endColumn":6},{"ruleId":"277","severity":1,"message":"278","line":31,"column":25,"nodeType":"279","endLine":31,"endColumn":34},"no-native-reassign",["303"],"no-negated-in-lhs",["304"],["303"],["304"],["303"],["304"],["303"],["304"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["303"],["304"],["303"],["304"],["303"],["304"],"no-unused-vars","'Label' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Input' is defined but never used.","'Divider' is defined but never used.",["303"],["304"],["303"],["304"],["303"],["304"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["305","306"],["307","308"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.","ArrayExpression",["309"],["303"],["304"],"'DatePicker' is defined but never used.","'showPost' is assigned a value but never used.","'setShowPost' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"310","fix":"311","desc":"312"},{"messageId":"313","fix":"314","desc":"315"},{"messageId":"310","fix":"316","desc":"312"},{"messageId":"313","fix":"317","desc":"315"},{"desc":"318","fix":"319"},"removeEscape",{"range":"320","text":"321"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"322","text":"323"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"324","text":"321"},{"range":"325","text":"323"},"Update the dependencies array to be: [register]",{"range":"326","text":"327"},[751,752],"",[751,751],"\\",[776,777],[776,776],[1484,1486],"[register]"]