[{"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\App.js":"1","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Plan\\Plan.js":"2","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Layout.js":"3","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Invest.container.js":"4","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\TradeLogger.js":"5","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\trade.reducer.js":"6","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\trade.middleware.js":"7","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\store.js":"8","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\index.js":"9","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Plan.container.js":"10","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\auth.reducer.js":"11","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\HomeSite\\HomeSite.js":"12","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\trade.actions.js":"13","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\FormTrade\\FormTrade.js":"14","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\AddTrade\\AddTrade.js":"15","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\UpdateTrade\\UpdateTrade.js":"16","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\index.js":"17","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\auth.middleware.js":"18","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Market\\Market.js":"19","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Utils\\trade.utils.js":"20","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\refreshToken.middleware.js":"21","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\HomeSite.container.js":"22","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\HomeDashboard\\HomeDashboard.js":"23","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\Signup\\Signup.js":"24","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\index.js":"25","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\Login.container.js":"26","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Invest\\Invest.js":"27","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainerWithPer.js":"28","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainer.js":"29","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\HomeDashboard.container.js":"30","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Layout.container.js":"31","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Market.container.js":"32","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Routes\\protected.routes.js":"33","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\auth.actions.js":"34","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\Journal.js":"35","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\Login\\Login.js":"36","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\Signup.container.js":"37","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\note.middleware.js":"38","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\AddNote\\AddNote.js":"39","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\FormNote\\FormNote.js":"40","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\note.actions.js":"41","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\note.reducer.js":"42","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Trades\\TradeLogger.container.js":"43","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Trades\\AddTrade.container.js":"44","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Notes\\Journal.container.js":"45","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\UpdateNote\\UpdateNote.js":"46","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Notes\\UpdateNote.container.js":"47","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\reportWebVitals.js":"48","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Notes\\AddNote.container.js":"49"},{"size":2061,"mtime":1616005406558,"results":"50","hashOfConfig":"51"},{"size":194,"mtime":1610730089353,"results":"52","hashOfConfig":"51"},{"size":3848,"mtime":1616508439380,"results":"53","hashOfConfig":"51"},{"size":270,"mtime":1610729973510,"results":"54","hashOfConfig":"51"},{"size":15177,"mtime":1616005278666,"results":"55","hashOfConfig":"51"},{"size":6034,"mtime":1616114811588,"results":"56","hashOfConfig":"51"},{"size":5269,"mtime":1616087805525,"results":"57","hashOfConfig":"51"},{"size":1311,"mtime":1615825079303,"results":"58","hashOfConfig":"51"},{"size":669,"mtime":1610591537162,"results":"59","hashOfConfig":"51"},{"size":262,"mtime":1610730058707,"results":"60","hashOfConfig":"51"},{"size":3630,"mtime":1611240192243,"results":"61","hashOfConfig":"51"},{"size":381,"mtime":1610298093219,"results":"62","hashOfConfig":"51"},{"size":2516,"mtime":1611180892574,"results":"63","hashOfConfig":"51"},{"size":16283,"mtime":1611254763131,"results":"64","hashOfConfig":"51"},{"size":2508,"mtime":1611180980001,"results":"65","hashOfConfig":"51"},{"size":3801,"mtime":1611225451687,"results":"66","hashOfConfig":"51"},{"size":1423,"mtime":1610775209090,"results":"67","hashOfConfig":"51"},{"size":3068,"mtime":1611152560405,"results":"68","hashOfConfig":"51"},{"size":200,"mtime":1610729852704,"results":"69","hashOfConfig":"51"},{"size":4907,"mtime":1611247585730,"results":"70","hashOfConfig":"51"},{"size":1317,"mtime":1610689702927,"results":"71","hashOfConfig":"51"},{"size":273,"mtime":1610554501129,"results":"72","hashOfConfig":"51"},{"size":937,"mtime":1611167756843,"results":"73","hashOfConfig":"51"},{"size":6598,"mtime":1610652501148,"results":"74","hashOfConfig":"51"},{"size":388,"mtime":1615824619532,"results":"75","hashOfConfig":"51"},{"size":647,"mtime":1610638094846,"results":"76","hashOfConfig":"51"},{"size":200,"mtime":1610729990565,"results":"77","hashOfConfig":"51"},{"size":3676,"mtime":1611056627597,"results":"78","hashOfConfig":"51"},{"size":687,"mtime":1611050376138,"results":"79","hashOfConfig":"51"},{"size":344,"mtime":1611167016602,"results":"80","hashOfConfig":"51"},{"size":410,"mtime":1611167169813,"results":"81","hashOfConfig":"51"},{"size":270,"mtime":1610729823767,"results":"82","hashOfConfig":"51"},{"size":330,"mtime":1610591835673,"results":"83","hashOfConfig":"51"},{"size":1680,"mtime":1610640866062,"results":"84","hashOfConfig":"51"},{"size":4282,"mtime":1616432175510,"results":"85","hashOfConfig":"51"},{"size":2246,"mtime":1610652311501,"results":"86","hashOfConfig":"51"},{"size":583,"mtime":1610652545475,"results":"87","hashOfConfig":"51"},{"size":2361,"mtime":1616011507763,"results":"88","hashOfConfig":"51"},{"size":1242,"mtime":1616011740388,"results":"89","hashOfConfig":"51"},{"size":2372,"mtime":1616011722130,"results":"90","hashOfConfig":"51"},{"size":1706,"mtime":1616008435018,"results":"91","hashOfConfig":"51"},{"size":2739,"mtime":1616011395910,"results":"92","hashOfConfig":"51"},{"size":684,"mtime":1616005337998,"results":"93","hashOfConfig":"51"},{"size":770,"mtime":1616005350541,"results":"94","hashOfConfig":"51"},{"size":738,"mtime":1616010195631,"results":"95","hashOfConfig":"51"},{"size":1039,"mtime":1616011721400,"results":"96","hashOfConfig":"51"},{"size":667,"mtime":1616010279826,"results":"97","hashOfConfig":"51"},{"size":362,"mtime":1609121759416,"results":"98","hashOfConfig":"51"},{"size":598,"mtime":1616005781771,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cywuev",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"114"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"167"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\App.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Plan\\Plan.js",[],["211","212"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Layout.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Invest.container.js",[],["213","214"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\TradeLogger.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\trade.reducer.js",[],["215","216"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\trade.middleware.js",["217"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\store.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\index.js",[],["218","219"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Plan.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\auth.reducer.js",[],["220","221"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\HomeSite\\HomeSite.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\trade.actions.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\FormTrade\\FormTrade.js",["222","223"],"import React from \"react\";\r\nimport { Form, Input, Select, TextArea, Popup, Label } from \"semantic-ui-react\";\r\n\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport fr from \"date-fns/locale/fr\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nregisterLocale(\"fr\", fr);\r\n\r\nconst typeSelect = [\r\n    { key: \"long\", value: \"Long\", text: \"Long\" },\r\n    { key: \"short\", value: \"Short\", text: \"Short\" },\r\n];\r\nconst platformSelect = [\r\n    { key: \"binance\", value: \"Binance\", text: \"Binance\" },\r\n    { key: \"ftx\", value: \"FTX\", text: \"FTX\" },\r\n    { key: \"bittrex\", value: \"Bittrex\", text: \"Bittrex\" },\r\n    { key: \"kraken\", value: \"Kraken\", text: \"Kraken\" },\r\n    { key: \"coinbase\", value: \"Coinbase\", text: \"Coinbase\" },\r\n];\r\n\r\nconst setupList = [\r\n    {\r\n        key: \"Ichimoku\",\r\n        text: \"Ichimoku\",\r\n        value: \"Ichimoku\",\r\n    },\r\n    {\r\n        key: \"W\",\r\n        text: \"W\",\r\n        value: \"W\",\r\n    },\r\n];\r\n\r\nconst formatList = [\r\n    {\r\n        key: \"USDT\",\r\n        text: \"USDT\",\r\n        value: \"USDT\",\r\n    },\r\n    {\r\n        key: \"USD\",\r\n        text: \"USD\",\r\n        value: \"USD\",\r\n    },\r\n    {\r\n        key: \"BTC\",\r\n        text: \"BTC\",\r\n        value: \"BTC\",\r\n    },\r\n];\r\n\r\nconst errorLabelColor = \"#fc4136\";\r\nconst errorBorderColor = \"1px solid rgb(252 65 54 / 64%)\";\r\n\r\nconst FormModal = ({ tradeData, setTradeData, errors }) => {\r\n    const handleChange = (e, data) => {\r\n        const { name, value } = data ? data : e.target;\r\n        const dataForm = {\r\n            ...tradeData,\r\n            [name]: value,\r\n        };\r\n        setTradeData(dataForm);\r\n    };\r\n\r\n    return (\r\n        <div className=\"modalform\">\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <Popup\r\n                            content=\"Calculations are different when you trade against BTC or USD\"\r\n                            trigger={\r\n                                <label style={errors && errors.format && { color: errorLabelColor }}>Format *</label>\r\n                            }\r\n                        />\r\n                        <Select\r\n                            style={errors && errors.format && { border: errorBorderColor }}\r\n                            name=\"format\"\r\n                            placeholder=\"Choose..\"\r\n                            options={formatList}\r\n                            value={tradeData.format}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                    {tradeData.format === \"BTC\" && (\r\n                        <Form.Field>\r\n                            <Popup\r\n                                content=\"The price of Bitcoin at the time you close your trade. So we can calculate your profit.\"\r\n                                trigger={\r\n                                    <label style={errors && errors.priceBtcVsUsd && { color: errorLabelColor }}>\r\n                                        Price BTC vs USD\r\n                                    </label>\r\n                                }\r\n                            />\r\n                            <Input\r\n                                style={errors && errors.priceBtcVsUsd && { border: errorBorderColor }}\r\n                                name=\"priceBtcVsUsd\"\r\n                                type=\"text\"\r\n                                onChange={handleChange}\r\n                                placeholder=\"35200\"\r\n                                label=\"$\"\r\n                                labelPosition={\"right corner\"}\r\n                                value={tradeData.priceBtcVsUsd}\r\n                            />\r\n                        </Form.Field>\r\n                    )}\r\n                    <Form.Field>\r\n                        <Popup\r\n                            content=\"If you want, you can add screenshot for your trade. (URL)\"\r\n                            trigger={\r\n                                <label style={errors && errors.screenshotUrl && { color: errorLabelColor }}>\r\n                                    Screenshot URL\r\n                                </label>\r\n                            }\r\n                        />\r\n\r\n                        <Input\r\n                            style={errors && errors.screenshotUrl && { border: errorBorderColor }}\r\n                            name=\"screenshotUrl\"\r\n                            type=\"text\"\r\n                            onChange={handleChange}\r\n                            placeholder=\"https://tradingview.com/x/gFRYCH3B/\"\r\n                            value={tradeData.screenshotUrl}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.platform && { color: errorLabelColor }}>Platform *</label>\r\n                        <Select\r\n                            style={errors && errors.platform && { border: errorBorderColor }}\r\n                            placeholder=\"Choose..\"\r\n                            name=\"platform\"\r\n                            options={platformSelect}\r\n                            onChange={handleChange}\r\n                            value={tradeData.platform}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.type && { color: errorLabelColor }}>Type *</label>\r\n                        <Select\r\n                            style={errors && errors.type && { border: errorBorderColor }}\r\n                            placeholder=\"Choose..\"\r\n                            name=\"type\"\r\n                            options={typeSelect}\r\n                            onChange={handleChange}\r\n                            value={tradeData.type}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <Popup\r\n                            content={\r\n                                <>\r\n                                    <p>If the format is USDT : Example : EGLD/USD ou BTC/USD.</p>\r\n                                    <p>If the format is BTC : Example : EGLD/BTC</p>\r\n                                </>\r\n                            }\r\n                            trigger={\r\n                                <label style={errors && errors.assets && { color: errorLabelColor }}>Assets *</label>\r\n                            }\r\n                        />\r\n                        <Input\r\n                            style={errors && errors.assets && { border: errorBorderColor }}\r\n                            name=\"assets\"\r\n                            placeholder={tradeData.format !== \"BTC\" ? `BTC/USDT` : `EGLD/BTC`}\r\n                            value={tradeData.assets}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <Popup\r\n                            content=\"With what amount will you make this trade? If you are against the BTC, you must indicate an amount in Bitcoin.\"\r\n                            trigger={\r\n                                <label style={errors && errors.capital && { color: errorLabelColor }}>Capital *</label>\r\n                            }\r\n                        />\r\n                        <Input\r\n                            style={errors && errors.capital && { border: errorBorderColor }}\r\n                            name=\"capital\"\r\n                            placeholder=\"1000\"\r\n                            type=\"text\"\r\n                            pattern=\"^\\d*(\\.\\d{0,2})?$\"\r\n                            value={tradeData.capital}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.entryPrice && { color: errorLabelColor }}>Entry Price *</label>\r\n                        <Input\r\n                            style={errors && errors.entryPrice && { border: errorBorderColor }}\r\n                            name=\"entryPrice\"\r\n                            placeholder=\"34589\"\r\n                            value={tradeData.entryPrice}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.stopLoss && { color: errorLabelColor }}>Stop Loss</label>\r\n                        <Input\r\n                            style={errors && errors.stopLoss && { border: errorBorderColor }}\r\n                            name=\"stopLoss\"\r\n                            placeholder=\"33187\"\r\n                            value={tradeData.stopLoss}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.takeProfit && { color: errorLabelColor }}>Take Profit</label>\r\n                        <Input\r\n                            style={errors && errors.takeProfit && { border: errorBorderColor }}\r\n                            name=\"takeProfit\"\r\n                            placeholder=\"36897\"\r\n                            value={tradeData.takeProfit}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <Popup\r\n                            content=\"You can leave this box blank while waiting for your trade to be closed.\"\r\n                            trigger={\r\n                                <label style={errors && errors.exitPrice && { color: errorLabelColor }}>\r\n                                    Leaving Price\r\n                                </label>\r\n                            }\r\n                        />\r\n                        <Input\r\n                            style={errors && errors.exitPrice && { border: errorBorderColor }}\r\n                            name=\"exitPrice\"\r\n                            placeholder=\"36897\"\r\n                            value={tradeData.exitPrice && tradeData.exitPrice}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.riskRatio && { color: errorLabelColor }}>Risk Ratio</label>\r\n                        <Input\r\n                            style={errors && errors.riskRatio && { border: errorBorderColor }}\r\n                            name=\"riskRatio\"\r\n                            placeholder=\"2\"\r\n                            value={tradeData.riskRatio}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n\r\n                    <Form.Field>\r\n                        <label>Setup</label>\r\n                        <Select\r\n                            name=\"setup\"\r\n                            placeholder=\"Choose..\"\r\n                            options={setupList}\r\n                            value={tradeData.setup}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label>{`Levier: x${tradeData.leverage} `}</label>\r\n                        <Input\r\n                            min={1}\r\n                            max={125}\r\n                            name=\"leverage\"\r\n                            step={1}\r\n                            type=\"range\"\r\n                            onChange={handleChange}\r\n                            value={tradeData.leverage}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <Popup\r\n                            content=\"Your fee percentage (%). If you have 1% fee, write only 1.\"\r\n                            trigger={<label style={errors && errors.fees && { color: errorLabelColor }}>Fees *</label>}\r\n                        />\r\n                        <Input\r\n                            style={errors && errors.fees && { border: errorBorderColor }}\r\n                            name=\"fees\"\r\n                            placeholder=\"1\"\r\n                            value={tradeData.fees}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.entryDate && { color: errorLabelColor }}>Entry Date</label>\r\n                        <DatePicker\r\n                            style={errors && errors.entryDate && { border: errorBorderColor }}\r\n                            name=\"entryDate\"\r\n                            selected={Date.parse(tradeData.entryDate)}\r\n                            onChange={(date) => {\r\n                                console.log(date);\r\n                                setTradeData({\r\n                                    ...tradeData,\r\n                                    entryDate: date,\r\n                                });\r\n                            }}\r\n                            showTimeSelect\r\n                            locale=\"fr\"\r\n                            timeFormat=\"p\"\r\n                            timeIntervals={5}\r\n                            dateFormat=\"Pp\"\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.exitDate && { color: errorLabelColor }}>Exit Date</label>\r\n                        <DatePicker\r\n                            style={errors && errors.exitDate && { border: errorBorderColor }}\r\n                            name=\"exitDate\"\r\n                            selected={Date.parse(tradeData.exitDate)}\r\n                            onChange={(date) => {\r\n                                setTradeData({\r\n                                    ...tradeData,\r\n                                    exitDate: date,\r\n                                });\r\n                            }}\r\n                            showTimeSelect\r\n                            locale=\"fr\"\r\n                            timeFormat=\"p\"\r\n                            timeIntervals={5}\r\n                            dateFormat=\"Pp\"\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Field>\r\n                    <label style={errors && errors.feeling && { color: errorLabelColor }}>Feeling</label>\r\n                    <Input\r\n                        style={errors && errors.feeling && { border: errorBorderColor }}\r\n                        name=\"feeling\"\r\n                        onChange={handleChange}\r\n                        value={tradeData.feeling}\r\n                        placeholder=\"Feeling about this trade\"\r\n                    />\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                    <label style={errors && errors.notes && { color: errorLabelColor }}>Notes :</label>\r\n                    <TextArea\r\n                        style={errors && errors.notes && { border: errorBorderColor }}\r\n                        name=\"note\"\r\n                        value={tradeData.note}\r\n                        onChange={handleChange}\r\n                        className=\"note\"\r\n                        rows={2}\r\n                        rows={10}\r\n                        placeholder=\"What is your state of mind? Are you confident about taking this trade? Is this trade in accordance with your trading plan?\"\r\n                    />\r\n                </Form.Field>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormModal;\r\n","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\AddTrade\\AddTrade.js",["224","225"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\UpdateTrade\\UpdateTrade.js",[],["226","227"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\index.js",[],["228","229"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\auth.middleware.js",["230"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Market\\Market.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Utils\\trade.utils.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\refreshToken.middleware.js",[],["231","232"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\HomeSite.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\HomeDashboard\\HomeDashboard.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\Signup\\Signup.js",["233","234","235"],"import React, { useEffect, useRef } from \"react\";\r\nimport { Form, Button } from \"semantic-ui-react\";\r\nimport Auth from \"../index\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"./signup.scss\";\r\n\r\nconst Signup = (props) => {\r\n    const { signupErrors, signupSubmit, setSignupData } = props;\r\n\r\n    const { register, errors, handleSubmit, setValue, trigger, watch } = useForm();\r\n\r\n    const password = useRef({});\r\n    password.current = watch(\"password\", \"\");\r\n\r\n    const onSubmit = (data, e) => {\r\n        setSignupData(data);\r\n        signupSubmit();\r\n    };\r\n\r\n    useEffect(() => {\r\n        register(\r\n            { name: \"email\" },\r\n            {\r\n                required: \"Votre email est invalide\",\r\n                pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n            }\r\n        );\r\n        register({ name: \"pseudo\" }, { required: \"Votre pseudo doit faire 3 caractères minimum\", minLength: 3 });\r\n        register(\r\n            { name: \"password\" },\r\n            { required: \"Votre mot de passe doit faire 6 caractères au minimum\", minLength: 6 }\r\n        );\r\n        register(\r\n            { name: \"confirmPassword\" },\r\n            {\r\n                validate: (value) => value === password.current || \"Votre mot de passe ne correspond pas\",\r\n                required: true,\r\n                minLength: 6,\r\n            }\r\n        );\r\n    }, []);\r\n\r\n    const handleChange = async (e, { name, value }) => {\r\n        setValue(name, value);\r\n        await trigger({ name });\r\n    };\r\n\r\n    return (\r\n        <Auth>\r\n            <div className=\"signup\">\r\n                <div className=\"signup-form\">\r\n                    <Form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n                        <Form.Field>\r\n                            <label>Email</label>\r\n                            <Form.Input\r\n                                placeholder=\"youremail@gmail.com\"\r\n                                name=\"email\"\r\n                                type=\"text\"\r\n                                onChange={handleChange}\r\n                                //value={signupData.email}\r\n                            />\r\n                        </Form.Field>\r\n\r\n                        {errors.email ? (\r\n                            <Form.Field>\r\n                                <div className=\"form-error\">Votre email est invalide</div>\r\n                            </Form.Field>\r\n                        ) : (\r\n                            signupErrors.email && (\r\n                                <Form.Field>\r\n                                    <div className=\"form-error\">{signupErrors.email}</div>\r\n                                </Form.Field>\r\n                            )\r\n                        )}\r\n                        <Form.Field>\r\n                            <label>Pseudo</label>\r\n                            <Form.Input\r\n                                placeholder=\"JohnDoe\"\r\n                                name=\"pseudo\"\r\n                                type=\"text\"\r\n                                onChange={handleChange}\r\n                                //value={signupData.pseudo}\r\n                            />\r\n                        </Form.Field>\r\n\r\n                        {errors.pseudo ? (\r\n                            <Form.Field>\r\n                                <div className=\"form-error\">Votre pseudo doit faire 3 caractères minimum</div>\r\n                            </Form.Field>\r\n                        ) : (\r\n                            signupErrors.pseudo && (\r\n                                <Form.Field>\r\n                                    <div className=\"form-error\">{signupErrors.pseudo}</div>\r\n                                </Form.Field>\r\n                            )\r\n                        )}\r\n\r\n                        <Form.Field>\r\n                            <label>Password</label>\r\n                            <Form.Input\r\n                                placeholder=\"********\"\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                onChange={handleChange}\r\n                                //value={signupData.password}\r\n                            />\r\n                        </Form.Field>\r\n                        {errors.password ? (\r\n                            <Form.Field>\r\n                                <div className=\"form-error\">Votre mot de passe doit faire 6 caractères au minimum</div>\r\n                            </Form.Field>\r\n                        ) : (\r\n                            signupErrors.password && (\r\n                                <Form.Field>\r\n                                    <div className=\"form-error\">{signupErrors.password}</div>\r\n                                </Form.Field>\r\n                            )\r\n                        )}\r\n                        <Form.Field>\r\n                            <label>Confirm Password</label>\r\n                            <Form.Input\r\n                                placeholder=\"********\"\r\n                                name=\"confirmPassword\"\r\n                                type=\"password\"\r\n                                onChange={handleChange}\r\n                                //value={signupData.confirmPassword}\r\n                            />\r\n                        </Form.Field>\r\n                        {errors.confirmPassword && (\r\n                            <Form.Field>\r\n                                <div className=\"form-error\">Votre mot de passe ne correspond pas</div>\r\n                            </Form.Field>\r\n                        )}\r\n                        <Form.Field>\r\n                            {/* {signupErrors.password && <div className=\"form-error\">Mot de passe incorrect</div>} */}\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <Button primary className=\"form-submit\" type=\"submit\">\r\n                                Inscription\r\n                            </Button>\r\n                        </Form.Field>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </Auth>\r\n    );\r\n};\r\n\r\nexport default Signup;\r\n\r\n/*\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        const data = {\r\n            ...signupData,\r\n            [name]: value,\r\n        };\r\n\r\n        setSignupData(data);\r\n    };\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    };\r\n    */\r\n","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\index.js",[],["236","237"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\Login.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Invest\\Invest.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainerWithPer.js",[],["238","239"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainer.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\HomeDashboard.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Layout.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Market.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Routes\\protected.routes.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\auth.actions.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\Journal.js",["240","241","242"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\Login\\Login.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\Signup.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\note.middleware.js",["243"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\AddNote\\AddNote.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\FormNote\\FormNote.js",["244"],"import React from \"react\";\r\nimport { Form, Icon } from \"semantic-ui-react\";\r\nimport \"./style.scss\";\r\n\r\nconst FormNote = ({ setShowModal, setNoteData, noteData, submitForm }) => {\r\n    const handleChange = (e, data) => {\r\n        const { name, value } = data ? data : e.target;\r\n        const dataForm = {\r\n            ...noteData,\r\n            [name]: value,\r\n        };\r\n        setNoteData(dataForm);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        submitForm();\r\n        // if no error\r\n        setShowModal(false);\r\n    };\r\n    return (\r\n        <div className=\"formnote\">\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Field>\r\n                    <Form.Input placeholder=\"Your title\" name=\"title\" onChange={handleChange} value={noteData.title} />\r\n                    <Form.TextArea\r\n                        placeholder=\"Your content\"\r\n                        name=\"content\"\r\n                        onChange={handleChange}\r\n                        rows={2}\r\n                        rows={10}\r\n                        value={noteData.content}\r\n                    />\r\n                    <div className=\"formnote-feelings\">\r\n                        <div className=\"formnote-feelings_title\">Feeling: </div>\r\n                        <Icon\r\n                            name=\"smile\"\r\n                            size=\"big\"\r\n                            color={noteData.feeling === 1 ? `green` : \"grey\"}\r\n                            onClick={() => setNoteData({ ...noteData, feeling: 1 })}\r\n                        />\r\n                        <Icon\r\n                            name=\"meh\"\r\n                            size=\"big\"\r\n                            color={noteData.feeling === 2 ? `green` : \"grey\"}\r\n                            onClick={() => setNoteData({ ...noteData, feeling: 2 })}\r\n                        />\r\n                        <Icon\r\n                            name=\"frown\"\r\n                            size=\"big\"\r\n                            color={noteData.feeling === 3 ? `green` : \"grey\"}\r\n                            onClick={() => setNoteData({ ...noteData, feeling: 3 })}\r\n                        />\r\n                    </div>\r\n                    <Form.Button>Save</Form.Button>\r\n                </Form.Field>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormNote;\r\n","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\note.actions.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\note.reducer.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Trades\\TradeLogger.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Trades\\AddTrade.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Notes\\Journal.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\UpdateNote\\UpdateNote.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Notes\\UpdateNote.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Notes\\AddNote.container.js",[],{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"245","replacedBy":"249"},{"ruleId":"247","replacedBy":"250"},{"ruleId":"245","replacedBy":"251"},{"ruleId":"247","replacedBy":"252"},{"ruleId":"253","severity":1,"message":"254","line":24,"column":5,"nodeType":"255","messageId":"256","endLine":151,"endColumn":6},{"ruleId":"245","replacedBy":"257"},{"ruleId":"247","replacedBy":"258"},{"ruleId":"245","replacedBy":"259"},{"ruleId":"247","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":2,"column":48,"nodeType":"263","messageId":"264","endLine":2,"endColumn":53},{"ruleId":"265","severity":1,"message":"266","line":356,"column":25,"nodeType":"267","endLine":356,"endColumn":34},{"ruleId":"261","severity":1,"message":"268","line":2,"column":31,"nodeType":"263","messageId":"264","endLine":2,"endColumn":36},{"ruleId":"261","severity":1,"message":"269","line":2,"column":38,"nodeType":"263","messageId":"264","endLine":2,"endColumn":45},{"ruleId":"245","replacedBy":"270"},{"ruleId":"247","replacedBy":"271"},{"ruleId":"245","replacedBy":"272"},{"ruleId":"247","replacedBy":"273"},{"ruleId":"253","severity":1,"message":"254","line":19,"column":5,"nodeType":"255","messageId":"256","endLine":95,"endColumn":6},{"ruleId":"245","replacedBy":"274"},{"ruleId":"247","replacedBy":"275"},{"ruleId":"276","severity":1,"message":"277","line":25,"column":36,"nodeType":"278","messageId":"279","endLine":25,"endColumn":37,"suggestions":"280"},{"ruleId":"276","severity":1,"message":"277","line":25,"column":61,"nodeType":"278","messageId":"279","endLine":25,"endColumn":62,"suggestions":"281"},{"ruleId":"282","severity":1,"message":"283","line":41,"column":8,"nodeType":"284","endLine":41,"endColumn":10,"suggestions":"285"},{"ruleId":"245","replacedBy":"286"},{"ruleId":"247","replacedBy":"287"},{"ruleId":"245","replacedBy":"288"},{"ruleId":"247","replacedBy":"289"},{"ruleId":"261","severity":1,"message":"290","line":4,"column":8,"nodeType":"263","messageId":"264","endLine":4,"endColumn":18},{"ruleId":"261","severity":1,"message":"291","line":14,"column":12,"nodeType":"263","messageId":"264","endLine":14,"endColumn":20},{"ruleId":"261","severity":1,"message":"292","line":14,"column":22,"nodeType":"263","messageId":"264","endLine":14,"endColumn":33},{"ruleId":"253","severity":1,"message":"254","line":16,"column":5,"nodeType":"255","messageId":"256","endLine":72,"endColumn":6},{"ruleId":"265","severity":1,"message":"266","line":31,"column":25,"nodeType":"267","endLine":31,"endColumn":34},"no-native-reassign",["293"],"no-negated-in-lhs",["294"],["293"],["294"],["293"],["294"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["293"],["294"],["293"],["294"],"no-unused-vars","'Label' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Input' is defined but never used.","'Divider' is defined but never used.",["293"],["294"],["293"],["294"],["293"],["294"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["295","296"],["297","298"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.","ArrayExpression",["299"],["293"],["294"],["293"],["294"],"'DatePicker' is defined but never used.","'showPost' is assigned a value but never used.","'setShowPost' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"300","fix":"301","desc":"302"},{"messageId":"303","fix":"304","desc":"305"},{"messageId":"300","fix":"306","desc":"302"},{"messageId":"303","fix":"307","desc":"305"},{"desc":"308","fix":"309"},"removeEscape",{"range":"310","text":"311"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"312","text":"313"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"314","text":"311"},{"range":"315","text":"313"},"Update the dependencies array to be: [register]",{"range":"316","text":"317"},[751,752],"",[751,751],"\\",[776,777],[776,776],[1484,1486],"[register]"]