[{"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\App.js":"1","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Plan\\Plan.js":"2","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Layout.js":"3","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Invest.container.js":"4","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\TradeLogger.js":"5","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\trade.reducer.js":"6","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\trade.middleware.js":"7","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\store.js":"8","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\TradeLogger.container.js":"9","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\index.js":"10","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Plan.container.js":"11","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\auth.reducer.js":"12","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\HomeSite\\HomeSite.js":"13","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\trade.actions.js":"14","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\FormTrade\\FormTrade.js":"15","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\AddTrade\\AddTrade.js":"16","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\UpdateTrade\\UpdateTrade.js":"17","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\UpdateTrade.container.js":"18","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\index.js":"19","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\auth.middleware.js":"20","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Market\\Market.js":"21","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Utils\\trade.utils.js":"22","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\refreshToken.middleware.js":"23","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\HomeSite.container.js":"24","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\HomeDashboard\\HomeDashboard.js":"25","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\Signup\\Signup.js":"26","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\index.js":"27","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\Login.container.js":"28","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Invest\\Invest.js":"29","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\AddTrade.container.js":"30","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainerWithPer.js":"31","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainer.js":"32","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Journal.container.js":"33","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\HomeDashboard.container.js":"34","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Layout.container.js":"35","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Market.container.js":"36","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Routes\\protected.routes.js":"37","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\auth.actions.js":"38","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\Journal.js":"39","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\Login\\Login.js":"40","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\Signup.container.js":"41","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\note.middleware.js":"42","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\AddNote\\AddNote.js":"43","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\FormNote\\FormNote.js":"44"},{"size":2049,"mtime":1611167480238,"results":"45","hashOfConfig":"46"},{"size":194,"mtime":1610730089353,"results":"47","hashOfConfig":"46"},{"size":3832,"mtime":1611254775435,"results":"48","hashOfConfig":"46"},{"size":270,"mtime":1610729973510,"results":"49","hashOfConfig":"46"},{"size":15163,"mtime":1611254737565,"results":"50","hashOfConfig":"46"},{"size":5748,"mtime":1611249442434,"results":"51","hashOfConfig":"46"},{"size":5279,"mtime":1611246987926,"results":"52","hashOfConfig":"46"},{"size":1311,"mtime":1615825079303,"results":"53","hashOfConfig":"46"},{"size":678,"mtime":1611181490482,"results":"54","hashOfConfig":"46"},{"size":669,"mtime":1610591537162,"results":"55","hashOfConfig":"46"},{"size":262,"mtime":1610730058707,"results":"56","hashOfConfig":"46"},{"size":3630,"mtime":1611240192243,"results":"57","hashOfConfig":"46"},{"size":381,"mtime":1610298093219,"results":"58","hashOfConfig":"46"},{"size":2516,"mtime":1611180892574,"results":"59","hashOfConfig":"46"},{"size":16283,"mtime":1611254763131,"results":"60","hashOfConfig":"46"},{"size":2508,"mtime":1611180980001,"results":"61","hashOfConfig":"46"},{"size":3801,"mtime":1611225451687,"results":"62","hashOfConfig":"46"},{"size":1072,"mtime":1611180909699,"results":"63","hashOfConfig":"46"},{"size":1423,"mtime":1610775209090,"results":"64","hashOfConfig":"46"},{"size":3068,"mtime":1611152560405,"results":"65","hashOfConfig":"46"},{"size":200,"mtime":1610729852704,"results":"66","hashOfConfig":"46"},{"size":4907,"mtime":1611247585730,"results":"67","hashOfConfig":"46"},{"size":1317,"mtime":1610689702927,"results":"68","hashOfConfig":"46"},{"size":273,"mtime":1610554501129,"results":"69","hashOfConfig":"46"},{"size":937,"mtime":1611167756843,"results":"70","hashOfConfig":"46"},{"size":6598,"mtime":1610652501148,"results":"71","hashOfConfig":"46"},{"size":388,"mtime":1615824619532,"results":"72","hashOfConfig":"46"},{"size":647,"mtime":1610638094846,"results":"73","hashOfConfig":"46"},{"size":200,"mtime":1610729990565,"results":"74","hashOfConfig":"46"},{"size":764,"mtime":1611180910411,"results":"75","hashOfConfig":"46"},{"size":3676,"mtime":1611056627597,"results":"76","hashOfConfig":"46"},{"size":687,"mtime":1611050376138,"results":"77","hashOfConfig":"46"},{"size":445,"mtime":1615825008878,"results":"78","hashOfConfig":"46"},{"size":344,"mtime":1611167016602,"results":"79","hashOfConfig":"46"},{"size":410,"mtime":1611167169813,"results":"80","hashOfConfig":"46"},{"size":270,"mtime":1610729823767,"results":"81","hashOfConfig":"46"},{"size":330,"mtime":1610591835673,"results":"82","hashOfConfig":"46"},{"size":1680,"mtime":1610640866062,"results":"83","hashOfConfig":"46"},{"size":4212,"mtime":1615827850403,"results":"84","hashOfConfig":"46"},{"size":2246,"mtime":1610652311501,"results":"85","hashOfConfig":"46"},{"size":583,"mtime":1610652545475,"results":"86","hashOfConfig":"46"},{"size":674,"mtime":1615825141105,"results":"87","hashOfConfig":"46"},{"size":1005,"mtime":1615828570573,"results":"88","hashOfConfig":"46"},{"size":821,"mtime":1615828757263,"results":"89","hashOfConfig":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cywuev",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\App.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Plan\\Plan.js",[],["187","188"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Layout.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Invest.container.js",[],["189","190"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\TradeLogger.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\trade.reducer.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\trade.middleware.js",["191"],"import axios from \"axios\";\r\nimport {\r\n    FETCH_TRADES,\r\n    fetchTradesSuccess,\r\n    fetchTradesError,\r\n    ADD_TRADE,\r\n    addTradeSuccess,\r\n    addTradeError,\r\n    SET_TRADE_UPDATE_ID,\r\n    setTradeUpdateData,\r\n    UPDATE_TRADE,\r\n    updateTradeSuccess,\r\n    updateTradeError,\r\n    DELETE_TRADE,\r\n    deleteTradeSuccess,\r\n    deleteTradeError,\r\n    setShowAddModal,\r\n    setShowUpdateModal,\r\n} from \"../actions/trade.actions\";\r\nimport { validateForm } from \"../../Utils/trade.utils\";\r\n\r\nexport const tradeMiddleware = (store) => (next) => (action) => {\r\n    next(action);\r\n    switch (action.type) {\r\n        case FETCH_TRADES: {\r\n            axios({\r\n                method: \"GET\",\r\n                url: `${process.env.REACT_APP_API_URL}/trade/`,\r\n            })\r\n                .then((res) => {\r\n                    store.dispatch(fetchTradesSuccess(res.data.trades));\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    store.dispatch(fetchTradesError());\r\n                });\r\n            break;\r\n        }\r\n        case ADD_TRADE: {\r\n            const { tradeData } = store.getState().tradeReducer;\r\n            const { user } = store.getState().authReducer;\r\n\r\n            let errors = validateForm(tradeData);\r\n\r\n            console.log(\"errors\", errors);\r\n\r\n            if (errors) {\r\n                store.dispatch(addTradeError(errors));\r\n                break;\r\n            }\r\n            axios({\r\n                method: \"POST\",\r\n                url: `${process.env.REACT_APP_API_URL}/trade/${user.id}`,\r\n                data: { ...tradeData, userId: user.id },\r\n            })\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (!res.data.error) {\r\n                        store.dispatch(addTradeSuccess({ ...res.data }));\r\n                        store.dispatch(setShowAddModal(false));\r\n                    } else {\r\n                        const errorsRes = res.data.error.errors;\r\n                        for (const err in errorsRes) {\r\n                            errors = { ...errors, [err]: \"Erreur\" };\r\n                        }\r\n                        store.dispatch(addTradeError(errors));\r\n                        console.log(errors);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    store.dispatch(addTradeError());\r\n                });\r\n\r\n            break;\r\n        }\r\n        case SET_TRADE_UPDATE_ID: {\r\n            const { trades } = store.getState().tradeReducer;\r\n            const tradeUpdateSelect = action.payload;\r\n\r\n            const trade = trades.find((trade) => trade._id === tradeUpdateSelect);\r\n\r\n            store.dispatch(setTradeUpdateData(trade));\r\n            break;\r\n        }\r\n        case UPDATE_TRADE: {\r\n            console.log(\"UDAPTE trade\");\r\n            const { tradeUpdateData, trades } = store.getState().tradeReducer;\r\n            const { user } = store.getState().authReducer;\r\n\r\n            let errors = validateForm(tradeUpdateData);\r\n\r\n            if (errors) {\r\n                store.dispatch(updateTradeError(errors));\r\n                break;\r\n            }\r\n\r\n            axios({\r\n                method: \"PATCH\",\r\n                url: `${process.env.REACT_APP_API_URL}/trade/${tradeUpdateData._id}`,\r\n                data: { ...tradeUpdateData, userId: user.id },\r\n            })\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (res.data.error) {\r\n                        const errorRes = res.data.error;\r\n\r\n                        errors = { ...errors, [errorRes.path]: \"Erreur\" };\r\n\r\n                        store.dispatch(updateTradeError(errors));\r\n                        console.log(errors);\r\n                    } else {\r\n                        const tradesUpdate = trades.map((trade) => {\r\n                            if (trade._id === tradeUpdateData._id) {\r\n                                return res.data.doc;\r\n                            } else {\r\n                                return trade;\r\n                            }\r\n                        });\r\n\r\n                        store.dispatch(updateTradeSuccess(tradesUpdate));\r\n                        store.dispatch(setShowUpdateModal(false));\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    store.dispatch(updateTradeError());\r\n                });\r\n\r\n            break;\r\n        }\r\n        case DELETE_TRADE: {\r\n            console.log(\"delete trade\");\r\n            const { trades, tradeUpdateId } = store.getState().tradeReducer;\r\n\r\n            axios({\r\n                method: \"DELETE\",\r\n                url: `${process.env.REACT_APP_API_URL}/trade/${tradeUpdateId}`,\r\n            })\r\n                .then((res) => {\r\n                    let removeTrade = trades.filter((trade) => trade._id !== tradeUpdateId);\r\n                    store.dispatch(deleteTradeSuccess(removeTrade));\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    store.dispatch(deleteTradeError());\r\n                });\r\n\r\n            break;\r\n        }\r\n    }\r\n};\r\n",["192","193"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\store.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\TradeLogger.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\index.js",[],["194","195"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Plan.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\auth.reducer.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\HomeSite\\HomeSite.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\trade.actions.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\FormTrade\\FormTrade.js",["196","197"],"import React from \"react\";\r\nimport { Form, Input, Select, TextArea, Popup, Label } from \"semantic-ui-react\";\r\n\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport fr from \"date-fns/locale/fr\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nregisterLocale(\"fr\", fr);\r\n\r\nconst typeSelect = [\r\n    { key: \"long\", value: \"Long\", text: \"Long\" },\r\n    { key: \"short\", value: \"Short\", text: \"Short\" },\r\n];\r\nconst platformSelect = [\r\n    { key: \"binance\", value: \"Binance\", text: \"Binance\" },\r\n    { key: \"ftx\", value: \"FTX\", text: \"FTX\" },\r\n    { key: \"bittrex\", value: \"Bittrex\", text: \"Bittrex\" },\r\n    { key: \"kraken\", value: \"Kraken\", text: \"Kraken\" },\r\n    { key: \"coinbase\", value: \"Coinbase\", text: \"Coinbase\" },\r\n];\r\n\r\nconst setupList = [\r\n    {\r\n        key: \"Ichimoku\",\r\n        text: \"Ichimoku\",\r\n        value: \"Ichimoku\",\r\n    },\r\n    {\r\n        key: \"W\",\r\n        text: \"W\",\r\n        value: \"W\",\r\n    },\r\n];\r\n\r\nconst formatList = [\r\n    {\r\n        key: \"USDT\",\r\n        text: \"USDT\",\r\n        value: \"USDT\",\r\n    },\r\n    {\r\n        key: \"USD\",\r\n        text: \"USD\",\r\n        value: \"USD\",\r\n    },\r\n    {\r\n        key: \"BTC\",\r\n        text: \"BTC\",\r\n        value: \"BTC\",\r\n    },\r\n];\r\n\r\nconst errorLabelColor = \"#fc4136\";\r\nconst errorBorderColor = \"1px solid rgb(252 65 54 / 64%)\";\r\n\r\nconst FormModal = ({ tradeData, setTradeData, errors }) => {\r\n    const handleChange = (e, data) => {\r\n        const { name, value } = data ? data : e.target;\r\n        const dataForm = {\r\n            ...tradeData,\r\n            [name]: value,\r\n        };\r\n        setTradeData(dataForm);\r\n    };\r\n\r\n    return (\r\n        <div className=\"modalform\">\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <Popup\r\n                            content=\"Calculations are different when you trade against BTC or USD\"\r\n                            trigger={\r\n                                <label style={errors && errors.format && { color: errorLabelColor }}>Format *</label>\r\n                            }\r\n                        />\r\n                        <Select\r\n                            style={errors && errors.format && { border: errorBorderColor }}\r\n                            name=\"format\"\r\n                            placeholder=\"Choose..\"\r\n                            options={formatList}\r\n                            value={tradeData.format}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                    {tradeData.format === \"BTC\" && (\r\n                        <Form.Field>\r\n                            <Popup\r\n                                content=\"The price of Bitcoin at the time you close your trade. So we can calculate your profit.\"\r\n                                trigger={\r\n                                    <label style={errors && errors.priceBtcVsUsd && { color: errorLabelColor }}>\r\n                                        Price BTC vs USD\r\n                                    </label>\r\n                                }\r\n                            />\r\n                            <Input\r\n                                style={errors && errors.priceBtcVsUsd && { border: errorBorderColor }}\r\n                                name=\"priceBtcVsUsd\"\r\n                                type=\"text\"\r\n                                onChange={handleChange}\r\n                                placeholder=\"35200\"\r\n                                label=\"$\"\r\n                                labelPosition={\"right corner\"}\r\n                                value={tradeData.priceBtcVsUsd}\r\n                            />\r\n                        </Form.Field>\r\n                    )}\r\n                    <Form.Field>\r\n                        <Popup\r\n                            content=\"If you want, you can add screenshot for your trade. (URL)\"\r\n                            trigger={\r\n                                <label style={errors && errors.screenshotUrl && { color: errorLabelColor }}>\r\n                                    Screenshot URL\r\n                                </label>\r\n                            }\r\n                        />\r\n\r\n                        <Input\r\n                            style={errors && errors.screenshotUrl && { border: errorBorderColor }}\r\n                            name=\"screenshotUrl\"\r\n                            type=\"text\"\r\n                            onChange={handleChange}\r\n                            placeholder=\"https://tradingview.com/x/gFRYCH3B/\"\r\n                            value={tradeData.screenshotUrl}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.platform && { color: errorLabelColor }}>Platform *</label>\r\n                        <Select\r\n                            style={errors && errors.platform && { border: errorBorderColor }}\r\n                            placeholder=\"Choose..\"\r\n                            name=\"platform\"\r\n                            options={platformSelect}\r\n                            onChange={handleChange}\r\n                            value={tradeData.platform}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.type && { color: errorLabelColor }}>Type *</label>\r\n                        <Select\r\n                            style={errors && errors.type && { border: errorBorderColor }}\r\n                            placeholder=\"Choose..\"\r\n                            name=\"type\"\r\n                            options={typeSelect}\r\n                            onChange={handleChange}\r\n                            value={tradeData.type}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <Popup\r\n                            content={\r\n                                <>\r\n                                    <p>If the format is USDT : Example : EGLD/USD ou BTC/USD.</p>\r\n                                    <p>If the format is BTC : Example : EGLD/BTC</p>\r\n                                </>\r\n                            }\r\n                            trigger={\r\n                                <label style={errors && errors.assets && { color: errorLabelColor }}>Assets *</label>\r\n                            }\r\n                        />\r\n                        <Input\r\n                            style={errors && errors.assets && { border: errorBorderColor }}\r\n                            name=\"assets\"\r\n                            placeholder={tradeData.format !== \"BTC\" ? `BTC/USDT` : `EGLD/BTC`}\r\n                            value={tradeData.assets}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <Popup\r\n                            content=\"With what amount will you make this trade? If you are against the BTC, you must indicate an amount in Bitcoin.\"\r\n                            trigger={\r\n                                <label style={errors && errors.capital && { color: errorLabelColor }}>Capital *</label>\r\n                            }\r\n                        />\r\n                        <Input\r\n                            style={errors && errors.capital && { border: errorBorderColor }}\r\n                            name=\"capital\"\r\n                            placeholder=\"1000\"\r\n                            type=\"text\"\r\n                            pattern=\"^\\d*(\\.\\d{0,2})?$\"\r\n                            value={tradeData.capital}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.entryPrice && { color: errorLabelColor }}>Entry Price *</label>\r\n                        <Input\r\n                            style={errors && errors.entryPrice && { border: errorBorderColor }}\r\n                            name=\"entryPrice\"\r\n                            placeholder=\"34589\"\r\n                            value={tradeData.entryPrice}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.stopLoss && { color: errorLabelColor }}>Stop Loss</label>\r\n                        <Input\r\n                            style={errors && errors.stopLoss && { border: errorBorderColor }}\r\n                            name=\"stopLoss\"\r\n                            placeholder=\"33187\"\r\n                            value={tradeData.stopLoss}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.takeProfit && { color: errorLabelColor }}>Take Profit</label>\r\n                        <Input\r\n                            style={errors && errors.takeProfit && { border: errorBorderColor }}\r\n                            name=\"takeProfit\"\r\n                            placeholder=\"36897\"\r\n                            value={tradeData.takeProfit}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <Popup\r\n                            content=\"You can leave this box blank while waiting for your trade to be closed.\"\r\n                            trigger={\r\n                                <label style={errors && errors.exitPrice && { color: errorLabelColor }}>\r\n                                    Leaving Price\r\n                                </label>\r\n                            }\r\n                        />\r\n                        <Input\r\n                            style={errors && errors.exitPrice && { border: errorBorderColor }}\r\n                            name=\"exitPrice\"\r\n                            placeholder=\"36897\"\r\n                            value={tradeData.exitPrice && tradeData.exitPrice}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.riskRatio && { color: errorLabelColor }}>Risk Ratio</label>\r\n                        <Input\r\n                            style={errors && errors.riskRatio && { border: errorBorderColor }}\r\n                            name=\"riskRatio\"\r\n                            placeholder=\"2\"\r\n                            value={tradeData.riskRatio}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n\r\n                    <Form.Field>\r\n                        <label>Setup</label>\r\n                        <Select\r\n                            name=\"setup\"\r\n                            placeholder=\"Choose..\"\r\n                            options={setupList}\r\n                            value={tradeData.setup}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label>{`Levier: x${tradeData.leverage} `}</label>\r\n                        <Input\r\n                            min={1}\r\n                            max={125}\r\n                            name=\"leverage\"\r\n                            step={1}\r\n                            type=\"range\"\r\n                            onChange={handleChange}\r\n                            value={tradeData.leverage}\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <Popup\r\n                            content=\"Your fee percentage (%). If you have 1% fee, write only 1.\"\r\n                            trigger={<label style={errors && errors.fees && { color: errorLabelColor }}>Fees *</label>}\r\n                        />\r\n                        <Input\r\n                            style={errors && errors.fees && { border: errorBorderColor }}\r\n                            name=\"fees\"\r\n                            placeholder=\"1\"\r\n                            value={tradeData.fees}\r\n                            onChange={handleChange}\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.entryDate && { color: errorLabelColor }}>Entry Date</label>\r\n                        <DatePicker\r\n                            style={errors && errors.entryDate && { border: errorBorderColor }}\r\n                            name=\"entryDate\"\r\n                            selected={Date.parse(tradeData.entryDate)}\r\n                            onChange={(date) => {\r\n                                console.log(date);\r\n                                setTradeData({\r\n                                    ...tradeData,\r\n                                    entryDate: date,\r\n                                });\r\n                            }}\r\n                            showTimeSelect\r\n                            locale=\"fr\"\r\n                            timeFormat=\"p\"\r\n                            timeIntervals={5}\r\n                            dateFormat=\"Pp\"\r\n                        />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <label style={errors && errors.exitDate && { color: errorLabelColor }}>Exit Date</label>\r\n                        <DatePicker\r\n                            style={errors && errors.exitDate && { border: errorBorderColor }}\r\n                            name=\"exitDate\"\r\n                            selected={Date.parse(tradeData.exitDate)}\r\n                            onChange={(date) => {\r\n                                setTradeData({\r\n                                    ...tradeData,\r\n                                    exitDate: date,\r\n                                });\r\n                            }}\r\n                            showTimeSelect\r\n                            locale=\"fr\"\r\n                            timeFormat=\"p\"\r\n                            timeIntervals={5}\r\n                            dateFormat=\"Pp\"\r\n                        />\r\n                    </Form.Field>\r\n                </Form.Group>\r\n\r\n                <Form.Field>\r\n                    <label style={errors && errors.feeling && { color: errorLabelColor }}>Feeling</label>\r\n                    <Input\r\n                        style={errors && errors.feeling && { border: errorBorderColor }}\r\n                        name=\"feeling\"\r\n                        onChange={handleChange}\r\n                        value={tradeData.feeling}\r\n                        placeholder=\"Feeling about this trade\"\r\n                    />\r\n                </Form.Field>\r\n\r\n                <Form.Field>\r\n                    <label style={errors && errors.notes && { color: errorLabelColor }}>Notes :</label>\r\n                    <TextArea\r\n                        style={errors && errors.notes && { border: errorBorderColor }}\r\n                        name=\"note\"\r\n                        value={tradeData.note}\r\n                        onChange={handleChange}\r\n                        className=\"note\"\r\n                        rows={2}\r\n                        rows={10}\r\n                        placeholder=\"What is your state of mind? Are you confident about taking this trade? Is this trade in accordance with your trading plan?\"\r\n                    />\r\n                </Form.Field>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormModal;\r\n","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\AddTrade\\AddTrade.js",["198","199"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\UpdateTrade\\UpdateTrade.js",[],["200","201"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\UpdateTrade.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\index.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\auth.middleware.js",["202"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Market\\Market.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Utils\\trade.utils.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\refreshToken.middleware.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\HomeSite.container.js",[],["203","204"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\HomeDashboard\\HomeDashboard.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\Signup\\Signup.js",["205","206","207"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\index.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\Login.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Invest\\Invest.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\AddTrade.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainerWithPer.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainer.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Journal.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\HomeDashboard.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Layout.container.js",[],["208","209"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Market.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Routes\\protected.routes.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\auth.actions.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\Journal.js",["210"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\Login\\Login.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\Signup.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\note.middleware.js",["211","212","213"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\AddNote\\AddNote.js",["214"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Journal\\FormNote\\FormNote.js",["215","216"],{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","replacedBy":"220"},{"ruleId":"217","replacedBy":"221"},{"ruleId":"219","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":24,"column":5,"nodeType":"225","messageId":"226","endLine":151,"endColumn":6},{"ruleId":"217","replacedBy":"227"},{"ruleId":"219","replacedBy":"228"},{"ruleId":"217","replacedBy":"229"},{"ruleId":"219","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":2,"column":48,"nodeType":"233","messageId":"234","endLine":2,"endColumn":53},{"ruleId":"235","severity":1,"message":"236","line":356,"column":25,"nodeType":"237","endLine":356,"endColumn":34},{"ruleId":"231","severity":1,"message":"238","line":2,"column":31,"nodeType":"233","messageId":"234","endLine":2,"endColumn":36},{"ruleId":"231","severity":1,"message":"239","line":2,"column":38,"nodeType":"233","messageId":"234","endLine":2,"endColumn":45},{"ruleId":"217","replacedBy":"240"},{"ruleId":"219","replacedBy":"241"},{"ruleId":"223","severity":1,"message":"224","line":19,"column":5,"nodeType":"225","messageId":"226","endLine":95,"endColumn":6},{"ruleId":"217","replacedBy":"242"},{"ruleId":"219","replacedBy":"243"},{"ruleId":"244","severity":1,"message":"245","line":25,"column":36,"nodeType":"246","messageId":"247","endLine":25,"endColumn":37,"suggestions":"248"},{"ruleId":"244","severity":1,"message":"245","line":25,"column":61,"nodeType":"246","messageId":"247","endLine":25,"endColumn":62,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":41,"column":8,"nodeType":"252","endLine":41,"endColumn":10,"suggestions":"253"},{"ruleId":"217","replacedBy":"254"},{"ruleId":"219","replacedBy":"255"},{"ruleId":"231","severity":1,"message":"256","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":18},{"ruleId":"231","severity":1,"message":"257","line":2,"column":23,"nodeType":"233","messageId":"234","endLine":2,"endColumn":33},{"ruleId":"231","severity":1,"message":"258","line":2,"column":54,"nodeType":"233","messageId":"234","endLine":2,"endColumn":69},{"ruleId":"223","severity":1,"message":"224","line":6,"column":5,"nodeType":"225","messageId":"226","endLine":20,"endColumn":6},{"ruleId":"231","severity":1,"message":"259","line":1,"column":17,"nodeType":"233","messageId":"234","endLine":1,"endColumn":25},{"ruleId":"231","severity":1,"message":"260","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":16},{"ruleId":"231","severity":1,"message":"238","line":2,"column":18,"nodeType":"233","messageId":"234","endLine":2,"endColumn":23},"no-native-reassign",["261"],"no-negated-in-lhs",["262"],["261"],["262"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["261"],["262"],["261"],["262"],"no-unused-vars","'Label' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Input' is defined but never used.","'Divider' is defined but never used.",["261"],["262"],["261"],["262"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["263","264"],["265","266"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.","ArrayExpression",["267"],["261"],["262"],"'DatePicker' is defined but never used.","'fetchNotes' is defined but never used.","'fetchNotesError' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"268","fix":"269","desc":"270"},{"messageId":"271","fix":"272","desc":"273"},{"messageId":"268","fix":"274","desc":"270"},{"messageId":"271","fix":"275","desc":"273"},{"desc":"276","fix":"277"},"removeEscape",{"range":"278","text":"279"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"280","text":"281"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"282","text":"279"},{"range":"283","text":"281"},"Update the dependencies array to be: [register]",{"range":"284","text":"285"},[751,752],"",[751,751],"\\",[776,777],[776,776],[1484,1486],"[register]"]