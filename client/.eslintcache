[{"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\App.js":"1","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Plan\\Plan.js":"2","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Layout.js":"3","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Invest.container.js":"4","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\TradeLogger.js":"5","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\trade.reducer.js":"6","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\trade.middleware.js":"7","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\store.js":"8","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\TradeLogger.container.js":"9","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\index.js":"10","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Plan.container.js":"11","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\auth.reducer.js":"12","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\HomeSite\\HomeSite.js":"13","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\trade.actions.js":"14","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\FormTrade\\FormTrade.js":"15","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\AddTrade\\AddTrade.js":"16","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\UpdateTrade\\UpdateTrade.js":"17","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\UpdateTrade.container.js":"18","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\index.js":"19","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\auth.middleware.js":"20","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Market\\Market.js":"21","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Utils\\trade.utils.js":"22","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\refreshToken.middleware.js":"23","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\HomeSite.container.js":"24","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\HomeDashboard\\HomeDashboard.js":"25","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\Signup\\Signup.js":"26","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\index.js":"27","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\Login.container.js":"28","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Invest\\Invest.js":"29","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\AddTrade.container.js":"30","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainerWithPer.js":"31","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainer.js":"32","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Journal.container.js":"33","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\HomeDashboard.container.js":"34","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Layout.container.js":"35","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Market.container.js":"36","C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Routes\\protected.routes.js":"37"},{"size":2049,"mtime":1611167480238,"results":"38","hashOfConfig":"39"},{"size":194,"mtime":1610730089353,"results":"40","hashOfConfig":"39"},{"size":3838,"mtime":1611249368779,"results":"41","hashOfConfig":"39"},{"size":270,"mtime":1610729973510,"results":"42","hashOfConfig":"39"},{"size":15476,"mtime":1611181666624,"results":"43","hashOfConfig":"39"},{"size":5748,"mtime":1611249442434,"results":"44","hashOfConfig":"39"},{"size":5279,"mtime":1611246987926,"results":"45","hashOfConfig":"39"},{"size":1230,"mtime":1610755877150,"results":"46","hashOfConfig":"39"},{"size":678,"mtime":1611181490482,"results":"47","hashOfConfig":"39"},{"size":669,"mtime":1610591537162,"results":"48","hashOfConfig":"39"},{"size":262,"mtime":1610730058707,"results":"49","hashOfConfig":"39"},{"size":3630,"mtime":1611240192243,"results":"50","hashOfConfig":"39"},{"size":381,"mtime":1610298093219,"results":"51","hashOfConfig":"39"},{"size":2516,"mtime":1611180892574,"results":"52","hashOfConfig":"39"},{"size":16345,"mtime":1611247893649,"results":"53","hashOfConfig":"39"},{"size":2508,"mtime":1611180980001,"results":"54","hashOfConfig":"39"},{"size":3801,"mtime":1611225451687,"results":"55","hashOfConfig":"39"},{"size":1072,"mtime":1611180909699,"results":"56","hashOfConfig":"39"},{"size":1423,"mtime":1610775209090,"results":"57","hashOfConfig":"39"},{"size":3068,"mtime":1611152560405,"results":"58","hashOfConfig":"39"},{"size":200,"mtime":1610729852704,"results":"59","hashOfConfig":"39"},{"size":4907,"mtime":1611247585730,"results":"60","hashOfConfig":"39"},{"size":1317,"mtime":1610689702927,"results":"61","hashOfConfig":"39"},{"size":273,"mtime":1610554501129,"results":"62","hashOfConfig":"39"},{"size":937,"mtime":1611167756843,"results":"63","hashOfConfig":"39"},{"size":6598,"mtime":1610652501148,"results":"64","hashOfConfig":"39"},{"size":323,"mtime":1610755749104,"results":"65","hashOfConfig":"39"},{"size":647,"mtime":1610638094846,"results":"66","hashOfConfig":"39"},{"size":200,"mtime":1610729990565,"results":"67","hashOfConfig":"39"},{"size":764,"mtime":1611180910411,"results":"68","hashOfConfig":"39"},{"size":3676,"mtime":1611056627597,"results":"69","hashOfConfig":"39"},{"size":687,"mtime":1611050376138,"results":"70","hashOfConfig":"39"},{"size":274,"mtime":1610729909977,"results":"71","hashOfConfig":"39"},{"size":344,"mtime":1611167016602,"results":"72","hashOfConfig":"39"},{"size":410,"mtime":1611167169813,"results":"73","hashOfConfig":"39"},{"size":270,"mtime":1610729823767,"results":"74","hashOfConfig":"39"},{"size":330,"mtime":1610591835673,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cywuev",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\App.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Plan\\Plan.js",[],["156","157"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Layout.js",["158"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Invest.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\TradeLogger.js",["159"],"import React, { useEffect, useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Table, Image, Icon, Label, Form, Tab, Divider, Button } from \"semantic-ui-react\";\r\nimport Layout from \"../../../Containers/Dashboard/Layout.container\";\r\nimport \"./tradelogger.scss\";\r\n\r\n/* Components */\r\n\r\nimport AddTrade from \"../../../Containers/Dashboard/AddTrade.container\";\r\nimport UpdateTrade from \"../../../Containers/Dashboard/UpdateTrade.container\";\r\n\r\n/* Utils */\r\nimport {\r\n    statusColor,\r\n    formatTimestamps,\r\n    formatDate,\r\n    calculNbrOfTrades,\r\n    calculTotalProfit,\r\n    calculPerProfit,\r\n    profitColor,\r\n} from \"../../../Utils/trade.utils\";\r\nimport StatsContainerWithPer from \"../Stats/StatsContainerWithPer\";\r\nimport StatsContainer from \"../Stats/StatsContainer\";\r\n\r\nconst AllDataOfTrade = ({ trade, isAnimate }) => {\r\n    const panes = [\r\n        {\r\n            menuItem: \"Infos\",\r\n            render: ({ trade }) => (\r\n                <Tab.Pane>\r\n                    <div className=\"trade-infos_session\">\r\n                        <div className=\"session-left\">\r\n                            <div className=\"session-container\">\r\n                                <div className=\"session-entrydate\">{formatDate(trade.entryDate)}</div>\r\n                                <Icon name=\"long arrow alternate right\" style={{ display: \"block\", width: \"10%\" }} />\r\n                                <div className=\"session-exitdate\">{formatDate(trade.exitDate)}</div>\r\n                            </div>\r\n                            <div className=\"duration-container\">\r\n                                <Icon name=\"time\" />\r\n                                {formatTimestamps(trade.sessionDuration)}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"session-right\">\r\n                            <Image\r\n                                src={`./platform/${trade.platform}.png`}\r\n                                size=\"big\"\r\n                                style={{\r\n                                    display: \"block\",\r\n                                    width: \"auto\",\r\n                                    maxHeight: \"25px\",\r\n                                    margin: \"auto 0 auto auto\",\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <Divider />\r\n                    <div className=\"trade-infos_data\">\r\n                        <div className=\"\">\r\n                            <label className=\"trade-label\">Capital</label>\r\n                            <div className=\"\">{trade.capital} $</div>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <label className=\"trade-label\">Leverage</label>\r\n                            <div className=\"\">x {trade.leverage}</div>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <label className=\"trade-label\">Setup</label>\r\n                            <div className=\"\">{trade.setup}</div>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <label className=\"trade-label\">Risk</label>\r\n                            <div className=\"\">{trade.riskRatio}</div>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <label className=\"trade-label\">Fees</label>\r\n                            <div className=\"\">{trade.fees}%</div>\r\n                        </div>\r\n                    </div>\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n        {\r\n            menuItem: \"Screenshot\",\r\n            render: ({ trade }) => (\r\n                <Tab.Pane>\r\n                    <label className=\"trade-label\">Screen :</label>\r\n                    <Image src={trade.screenshotUrl} className=\"trade-screenshot\" size=\"large\" />\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n        {\r\n            menuItem: \"Notes\",\r\n            render: ({ trade }) => (\r\n                <Tab.Pane>\r\n                    <Form>\r\n                        {trade.feeling && (\r\n                            <Form.Field>\r\n                                <label>Feeling :</label>\r\n                                <Label>{trade.feeling}</Label>\r\n                            </Form.Field>\r\n                        )}\r\n                        <Form.Field>\r\n                            <label>Notes :</label>\r\n                            <Form.TextArea\r\n                                readOnly\r\n                                value={trade.note}\r\n                                className=\"note\"\r\n                                rows={10}\r\n                                placeholder=\"Edit this trade for add note\"\r\n                            />\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Tab.Pane>\r\n            ),\r\n        },\r\n    ];\r\n    return (\r\n        <div className={`trade ${isAnimate ? \"animate-trade\" : \"animate-exit-trade\"}`}>\r\n            <Tab trade={trade} menu={{ fluid: true, vertical: true, tabular: true }} panes={panes} className=\"tab\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst TradeLogger = (props) => {\r\n    const { trades, fetchTrades, tradeUpdateId, showAddModal, showUpdateModal } = props;\r\n    const [selectedRow, setSelectedRow] = useState({});\r\n\r\n    const [showUpdateTradeModal, setShowUpdateTradeModal] = useState(false);\r\n\r\n    const sortReducer = (state, action) => {\r\n        switch (action.type) {\r\n            case \"CHANGE_SORT\":\r\n                if (state.column === action.column) {\r\n                    return {\r\n                        ...state,\r\n                        data: state.data.slice().reverse(),\r\n                        direction: state.direction === \"ascending\" ? \"descending\" : \"ascending\",\r\n                    };\r\n                }\r\n                return {\r\n                    column: action.column,\r\n                    data: _.sortBy(state.data, [action.column]),\r\n                    direction: \"ascending\",\r\n                };\r\n\r\n            case \"SET_DATA\":\r\n                return {\r\n                    column: null,\r\n                    data: action.data,\r\n                    direction: null,\r\n                };\r\n            case \"SORT_RESET\":\r\n                return {\r\n                    column: null,\r\n                    data: action.data,\r\n                    direction: null,\r\n                };\r\n            default:\r\n                throw new Error();\r\n        }\r\n    };\r\n\r\n    const [state, dispatch] = React.useReducer(sortReducer, {\r\n        column: null,\r\n        data: [],\r\n        direction: null,\r\n    });\r\n\r\n    const { column, data, direction } = state;\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await fetchTrades();\r\n        }\r\n        fetchData();\r\n    }, [fetchTrades]);\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: \"SET_DATA\", data: trades });\r\n    }, [trades]);\r\n\r\n    const handleShowTrade = (trade) => {\r\n        if (selectedRow._id === trade._id) {\r\n            setSelectedRow({});\r\n        } else {\r\n            setSelectedRow(trade);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout title=\"Trade Logger\">\r\n            <div className=\"tradelogger\">\r\n                <div className=\"tradestats\">\r\n                    <StatsContainerWithPer\r\n                        percentage={calculPerProfit(trades, \"Long\")}\r\n                        nbrTrades={calculNbrOfTrades(trades, \"Long\")}\r\n                        type={\"Long\"}\r\n                    />\r\n                    <StatsContainerWithPer\r\n                        percentage={calculPerProfit(trades, \"Short\")}\r\n                        nbrTrades={calculNbrOfTrades(trades, \"Short\")}\r\n                        type={\"Short\"}\r\n                    />\r\n                    <StatsContainerWithPer\r\n                        percentage={calculPerProfit(trades, \"Global\")}\r\n                        nbrTrades={calculNbrOfTrades(trades, \"Global\")}\r\n                        type={\"Global\"}\r\n                    />\r\n                    <StatsContainer totalProfit={calculTotalProfit(trades)} type={\"Profit\"} />\r\n                </div>\r\n                <div className=\"action\">\r\n                    {column !== null && (\r\n                        <Button\r\n                            icon\r\n                            labelPosition=\"left\"\r\n                            size=\"small\"\r\n                            onClick={() => dispatch({ type: \"SORT_RESET\", data: trades })}\r\n                        >\r\n                            <Icon name=\"undo\" />\r\n                            Sort reset\r\n                        </Button>\r\n                    )}\r\n                    <AddTrade />\r\n                </div>\r\n                <Table basic=\"very\" sortable celled inverted selectable textAlign=\"center\">\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <Table.HeaderCell\r\n                                sorted={column === \"status\" ? direction : null}\r\n                                onClick={() => dispatch({ type: \"CHANGE_SORT\", column: \"status\" })}\r\n                            >\r\n                                Status\r\n                            </Table.HeaderCell>\r\n                            <Table.HeaderCell\r\n                                sorted={column === \"assets\" ? direction : null}\r\n                                onClick={() => dispatch({ type: \"CHANGE_SORT\", column: \"assets\" })}\r\n                            >\r\n                                Assets\r\n                            </Table.HeaderCell>\r\n                            <Table.HeaderCell\r\n                                sorted={column === \"type\" ? direction : null}\r\n                                onClick={() => dispatch({ type: \"CHANGE_SORT\", column: \"type\" })}\r\n                            >\r\n                                Type\r\n                            </Table.HeaderCell>\r\n                            <Table.HeaderCell\r\n                                sorted={column === \"entryPrice\" ? direction : null}\r\n                                onClick={() => dispatch({ type: \"CHANGE_SORT\", column: \"entryPrice\" })}\r\n                            >\r\n                                Entry Price\r\n                            </Table.HeaderCell>\r\n                            <Table.HeaderCell\r\n                                sorted={column === \"stopLoss\" ? direction : null}\r\n                                onClick={() => dispatch({ type: \"CHANGE_SORT\", column: \"stopLoss\" })}\r\n                            >\r\n                                Stop Loss\r\n                            </Table.HeaderCell>\r\n                            <Table.HeaderCell\r\n                                sorted={column === \"takeProfit\" ? direction : null}\r\n                                onClick={() => dispatch({ type: \"CHANGE_SORT\", column: \"takeProfit\" })}\r\n                            >\r\n                                Take Profit\r\n                            </Table.HeaderCell>\r\n                            <Table.HeaderCell\r\n                                sorted={column === \"exitPrice\" ? direction : null}\r\n                                onClick={() => dispatch({ type: \"CHANGE_SORT\", column: \"exitPrice\" })}\r\n                            >\r\n                                Leaving Price\r\n                            </Table.HeaderCell>\r\n                            <Table.HeaderCell\r\n                                sorted={column === \"pnl\" ? direction : null}\r\n                                onClick={() => dispatch({ type: \"CHANGE_SORT\", column: \"pnl\" })}\r\n                            >\r\n                                PnL\r\n                            </Table.HeaderCell>\r\n                            <Table.HeaderCell\r\n                                sorted={column === \"pnlPer\" ? direction : null}\r\n                                onClick={() => dispatch({ type: \"CHANGE_SORT\", column: \"pnlPer\" })}\r\n                            >\r\n                                PnL (%)\r\n                            </Table.HeaderCell>\r\n                            <Table.HeaderCell>Action</Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                    {data && data !== [] && (\r\n                        <Table.Body>\r\n                            {data.map((trade) => (\r\n                                <React.Fragment key={trade._id}>\r\n                                    <Table.Row\r\n                                        style={{ cursor: \"pointer\" }}\r\n                                        onClick={() => handleShowTrade(trade)}\r\n                                        active={selectedRow && selectedRow._id === trade._id}\r\n                                    >\r\n                                        <Table.Cell style={{ color: statusColor(trade.status) }}>\r\n                                            {trade.status}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>{trade.assets}</Table.Cell>\r\n                                        <Table.Cell>{trade.type}</Table.Cell>\r\n                                        <Table.Cell>{trade.entryPrice}</Table.Cell>\r\n                                        <Table.Cell>{trade.stopLoss}</Table.Cell>\r\n                                        <Table.Cell>{trade.takeProfit}</Table.Cell>\r\n                                        <Table.Cell>{trade.exitPrice}</Table.Cell>\r\n                                        <Table.Cell>\r\n                                            {trade.format === \"BTC\" ? (\r\n                                                <span style={{ color: profitColor(trade.pnl) }}>{trade.pnl} ₿</span>\r\n                                            ) : (\r\n                                                <span style={{ color: profitColor(trade.pnl) }}>{trade.pnl} $</span>\r\n                                            )}\r\n                                        </Table.Cell>\r\n                                        <Table.Cell>{trade.pnlPer}%</Table.Cell>\r\n                                        <Table.Cell style={{ display: \"flex\" }}>\r\n                                            <UpdateTrade\r\n                                                setShowModal={setShowUpdateTradeModal}\r\n                                                tradeId={trade._id}\r\n                                                tradeUpdateId={tradeUpdateId}\r\n                                            />\r\n                                        </Table.Cell>\r\n                                    </Table.Row>\r\n                                    {selectedRow && selectedRow._id === trade._id && !showAddModal && !showUpdateModal && (\r\n                                        <Table.Row textAlign=\"left\" style={{ background: \"#242526\" }}>\r\n                                            <Table.Cell colSpan={10}>\r\n                                                <AllDataOfTrade isAnimate={true} trade={trade} />\r\n                                            </Table.Cell>\r\n                                        </Table.Row>\r\n                                    )}\r\n                                </React.Fragment>\r\n                            ))}\r\n                        </Table.Body>\r\n                    )}\r\n                </Table>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default TradeLogger;\r\n",["160","161"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\trade.reducer.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\trade.middleware.js",["162"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\store.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\TradeLogger.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\index.js",[],["163","164"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Plan.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\auth.reducer.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\HomeSite\\HomeSite.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\actions\\trade.actions.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\FormTrade\\FormTrade.js",["165","166","167"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\AddTrade\\AddTrade.js",["168","169"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\TradeLogger\\UpdateTrade\\UpdateTrade.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\UpdateTrade.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\index.js",[],["170","171"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\auth.middleware.js",["172"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Market\\Market.js",[],["173","174"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Utils\\trade.utils.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\middlewares\\refreshToken.middleware.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\HomeSite.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\HomeDashboard\\HomeDashboard.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Site\\Auth\\Signup\\Signup.js",["175","176","177"],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Store\\reducers\\index.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Site\\Login.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Invest\\Invest.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\AddTrade.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainerWithPer.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Components\\Dashboard\\Stats\\StatsContainer.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Journal.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\HomeDashboard.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Layout.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Containers\\Dashboard\\Market.container.js",[],"C:\\Users\\Gautier C\\Desktop\\Programmation\\CryptoLogger\\client\\src\\Routes\\protected.routes.js",[],{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":3,"column":19,"nodeType":"184","messageId":"185","endLine":3,"endColumn":23},{"ruleId":"182","severity":1,"message":"186","line":128,"column":12,"nodeType":"184","messageId":"185","endLine":128,"endColumn":32},{"ruleId":"178","replacedBy":"187"},{"ruleId":"180","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":24,"column":5,"nodeType":"191","messageId":"192","endLine":151,"endColumn":6},{"ruleId":"178","replacedBy":"193"},{"ruleId":"180","replacedBy":"194"},{"ruleId":"182","severity":1,"message":"195","line":1,"column":17,"nodeType":"184","messageId":"185","endLine":1,"endColumn":26},{"ruleId":"182","severity":1,"message":"196","line":2,"column":48,"nodeType":"184","messageId":"185","endLine":2,"endColumn":53},{"ruleId":"197","severity":1,"message":"198","line":358,"column":25,"nodeType":"199","endLine":358,"endColumn":34},{"ruleId":"182","severity":1,"message":"200","line":2,"column":31,"nodeType":"184","messageId":"185","endLine":2,"endColumn":36},{"ruleId":"182","severity":1,"message":"201","line":2,"column":38,"nodeType":"184","messageId":"185","endLine":2,"endColumn":45},{"ruleId":"178","replacedBy":"202"},{"ruleId":"180","replacedBy":"203"},{"ruleId":"189","severity":1,"message":"190","line":19,"column":5,"nodeType":"191","messageId":"192","endLine":95,"endColumn":6},{"ruleId":"178","replacedBy":"204"},{"ruleId":"180","replacedBy":"205"},{"ruleId":"206","severity":1,"message":"207","line":25,"column":36,"nodeType":"208","messageId":"209","endLine":25,"endColumn":37,"suggestions":"210"},{"ruleId":"206","severity":1,"message":"207","line":25,"column":61,"nodeType":"208","messageId":"209","endLine":25,"endColumn":62,"suggestions":"211"},{"ruleId":"212","severity":1,"message":"213","line":41,"column":8,"nodeType":"214","endLine":41,"endColumn":10,"suggestions":"215"},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"no-unused-vars","'Icon' is defined but never used.","Identifier","unusedVar","'showUpdateTradeModal' is assigned a value but never used.",["216"],["217"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["216"],["217"],"'useEffect' is defined but never used.","'Label' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Input' is defined but never used.","'Divider' is defined but never used.",["216"],["217"],["216"],["217"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["218","219"],["220","221"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'register'. Either include it or remove the dependency array.","ArrayExpression",["222"],"no-global-assign","no-unsafe-negation",{"messageId":"223","fix":"224","desc":"225"},{"messageId":"226","fix":"227","desc":"228"},{"messageId":"223","fix":"229","desc":"225"},{"messageId":"226","fix":"230","desc":"228"},{"desc":"231","fix":"232"},"removeEscape",{"range":"233","text":"234"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"235","text":"236"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"237","text":"234"},{"range":"238","text":"236"},"Update the dependencies array to be: [register]",{"range":"239","text":"240"},[751,752],"",[751,751],"\\",[776,777],[776,776],[1484,1486],"[register]"]